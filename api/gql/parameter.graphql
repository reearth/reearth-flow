type Parameter {
    createdAt: DateTime!
    id: ID!
    index: Int!
    name: String!
    projectId: ID!
    required: Boolean!
    type: ParameterType!
    updatedAt: DateTime!
    value: Any!
}

enum ParameterType {
    CHOICE
    COLOR
    DATETIME
    FILE_FOLDER
    MESSAGE
    NUMBER
    PASSWORD
    TEXT
    YES_NO
    ATTRIBUTE_NAME
    COORDINATE_SYSTEM
    DATABASE_CONNECTION
    GEOMETRY
    REPROJECTION_FILE
    WEB_CONNECTION
}

# InputType

input DeclareParameterInput {
    name: String!
    type: ParameterType!
    required: Boolean!
    value: Any
    index: Int
}

input UpdateParameterValueInput {
    value: Any!
}

input UpdateParameterOrderInput {
    paramId: ID!
    newIndex: Int!
}

input RemoveParameterInput {
    paramId: ID!
}

# Query and Mutation

extend type Mutation {
    declareParameter(
        projectId: ID!
        input: DeclareParameterInput!
    ): Parameter!

    updateParameterValue(
        paramId: ID!
        input: UpdateParameterValueInput!
    ): Parameter!

     updateParameterOrder(
        projectId: ID!
        input: UpdateParameterOrderInput!
    ): [Parameter!]! 

    removeParameter(input: RemoveParameterInput!): Boolean!
}
