type Asset implements Node {
  contentType: String!
  createdAt: DateTime!
  id: ID!
  name: String!
  size: FileSize!
  url: String!
  workspaceId: ID!
  Workspace: Workspace
}

enum AssetSortType {
  DATE
  SIZE
  NAME
}

# InputType

input CreateAssetInput {
  workspaceId: ID!
  file: Upload!
}

input RemoveAssetInput {
  assetId: ID!
}

# Payload

type CreateAssetPayload {
  asset: Asset!
}

type RemoveAssetPayload {
  assetId: ID!
}

# Connection

type AssetConnection {
  nodes: [Asset]!
  pageInfo: PageInfo!
  totalCount: Int!
}

# Query and Mutation

extend type Query {
  assets(
    workspaceId: ID!
    keyword: String
    sort: AssetSortType
    pagination: PageBasedPagination!
  ): AssetConnection!
}

extend type Mutation {
  createAsset(input: CreateAssetInput!): CreateAssetPayload
  removeAsset(input: RemoveAssetInput!): RemoveAssetPayload
}
