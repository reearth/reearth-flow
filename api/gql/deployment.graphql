type Deployment implements Node {
  createdAt: DateTime!
  description: String!
  id: ID!
  project: Project
  projectId: ID
  updatedAt: DateTime!
  version: String!
  workflowUrl: String!
  workspace: Workspace
  workspaceId: ID!
}

# Input Types

input CreateDeploymentInput {
  workspaceId: ID!
  file: Upload!
  projectId: ID
  description: String
}

input UpdateDeploymentInput {
  deploymentId: ID!
  file: Upload
  description: String
}

input DeleteDeploymentInput {
  deploymentId: ID!
}

input ExecuteDeploymentInput {
  deploymentId: ID!
}

# Payload Types

type DeploymentPayload {
  deployment: Deployment!
}

type DeleteDeploymentPayload {
  deploymentId: ID!
}

type JobPayload {
  job: Job!
}

# Connection

type DeploymentConnection {
  edges: [DeploymentEdge!]!
  nodes: [Deployment]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type DeploymentEdge {
  cursor: Cursor!
  node: Deployment
}

# Query and Mutation

extend type Query {
  deployments(workspaceId: ID!, pagination: Pagination): DeploymentConnection!
}

extend type Mutation {
  createDeployment(input: CreateDeploymentInput!): DeploymentPayload
  updateDeployment(input: UpdateDeploymentInput!): DeploymentPayload
  deleteDeployment(input: DeleteDeploymentInput!): DeleteDeploymentPayload
  executeDeployment(input: ExecuteDeploymentInput!): JobPayload
}
