type Workflow implements Node {
  id: ID!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  nodes: [NodeType]
  edges: [EdgeType]
  type: WorkflowType!
  version: Int!
  projectId: ID!
  workspaceId: ID!
}

enum WorkflowType {
  MAIN_WORKFLOW
  SUB_WORKFLOW
}

type NodeType {
  id: ID!
  data: Data!
}

type Data {
  name: String
  inputs: [Input]!
  outputs: [Output]!
  status: Status
  content: String # For batch node. If we want rich text, how would this change?
  transformerId: ID
  params: [Param] # ?? How would we type this?
}

type Param {
  id: ID!
  name: String!
  value: ParamValue!
}

enum ParamValue {
  STRING
  NUMBER
  BOOLEAN
  OBJECT
  ARRAY
}

type EdgeType {
  id: ID!
  source: [ID!]!
  target: [ID!]!
}

# InputType

input CreateWorkflowInput {
  projectId: ID!
  workspaceId: ID!
  name: String!
  type: WorkflowType!
}

input UpdateWorkflowInput {
  workflowId: ID!
  name: String
  nodes: [NodeType]
  edges: [EdgeType]
}

input DeleteWorkflowInput {
  workflowId: ID!
}

# Payload

type CreateWorkflowPayload {
  workflow: Workflow!
}

type UpdateWorkflowPayload {
  workflow: Workflow!
}

type DeleteWorkflowPayload {
  workflowId: ID!
}

extend type Query {
  workflows(
    projectId: ID!
  ): [Workflow]!
}

extend type Mutation {
  createWorkflow(input: CreateWorkflowInput!): CreateWorkflowPayload
  updateWorkflow(input: UpdateWorkflowInput!): UpdateWorkflowPayload
  deleteWorkflow(input: DeleteWorkflowInput!): DeleteWorkflowPayload
}