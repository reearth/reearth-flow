{
  "actions": [
    {
      "name": "AreaOnAreaOverlayer",
      "description": "Perform Area Overlay Analysis"
    },
    {
      "name": "AttributeAggregator",
      "description": "Group and Aggregate Features by Attributes"
    },
    {
      "name": "AttributeBulkArrayJoiner",
      "description": "Join Array Attributes Into Single Values"
    },
    {
      "name": "AttributeConversionTable",
      "description": "Transform Feature Attributes Using Lookup Tables"
    },
    {
      "name": "AttributeDuplicateFilter",
      "description": "Remove Duplicate Features Based on Attribute Values"
    },
    {
      "name": "AttributeFilePathInfoExtractor",
      "description": "Extract File System Information from Path Attributes"
    },
    {
      "name": "AttributeFlattener",
      "description": "Flatten Nested Object Attributes into Top-Level Attributes"
    },
    {
      "name": "AttributeManager",
      "description": "Create, Convert, Rename, and Remove Feature Attributes"
    },
    {
      "name": "AttributeMapper",
      "description": "Transform Feature Attributes Using Expressions and Mappings"
    },
    {
      "name": "BoundsExtractor",
      "description": "Extract Bounding Box Coordinates from Feature Geometry"
    },
    {
      "name": "Bufferer",
      "description": "Create Buffer Around Features"
    },
    {
      "name": "BulkAttributeRenamer",
      "description": "Rename Feature Attributes in Bulk"
    },
    {
      "name": "CenterPointReplacer",
      "description": "Replace Feature Geometry with Center Point"
    },
    {
      "name": "Cesium3DTilesWriter",
      "description": "Export Features as Cesium 3D Tiles for Web Visualization"
    },
    {
      "name": "Clipper",
      "description": "Clip Features Using Boundary Shapes"
    },
    {
      "name": "ClosedCurveFilter",
      "description": "Filter LineString Features by Closed/Open Status"
    },
    {
      "name": "ConvexHullAccumulator",
      "description": "Generate Convex Hull Polygons from Grouped Features"
    },
    {
      "name": "CoordinateSystemSetter",
      "description": "Définit le système de coordonnées d'une entité"
    },
    {
      "name": "CsvReader",
      "description": "Read Features from CSV or TSV File"
    },
    {
      "name": "CzmlWriter",
      "description": "Export Features as CZML for Cesium Visualization"
    },
    {
      "name": "DimensionFilter",
      "description": "Filter Features by Geometry Dimension"
    },
    {
      "name": "DirectoryDecompressor",
      "description": "Extracts and decompresses archive files from specified attributes"
    },
    {
      "name": "Dissolver",
      "description": "Dissolve Features by Grouping Attributes"
    },
    {
      "name": "EchoProcessor",
      "description": "Debug Echo Features to Logs"
    },
    {
      "name": "EchoSink",
      "description": "Debug Echo Features to Logs"
    },
    {
      "name": "ElevationExtractor",
      "description": "Extract Z-Coordinate Elevation to Attribute"
    },
    {
      "name": "Extruder",
      "description": "Extrude 2D Polygons into 3D Solids"
    },
    {
      "name": "FeatureCityGmlReader",
      "description": "Reads and processes features from CityGML files with optional flattening"
    },
    {
      "name": "FeatureCounter",
      "description": "Count Features and Add Counter to Attribute"
    },
    {
      "name": "FeatureCreator",
      "description": "Generate Custom Features Using Scripts"
    },
    {
      "name": "FeatureDuplicateFilter",
      "description": "Filter Out Duplicate Features"
    },
    {
      "name": "FeatureFilePathExtractor",
      "description": "Extract File Paths from Dataset to Features"
    },
    {
      "name": "FeatureFilter",
      "description": "Filter Features Based on Custom Conditions"
    },
    {
      "name": "FeatureLodFilter",
      "description": "Filters features by Level of Detail (LOD), routing them to appropriate output ports"
    },
    {
      "name": "FeatureMerger",
      "description": "Merges requestor and supplier features based on matching attribute values"
    },
    {
      "name": "FeatureReader",
      "description": "Reads features from various file formats (CSV, TSV, JSON) with configurable parsing options"
    },
    {
      "name": "FeatureSorter",
      "description": "Sorts features based on specified attributes in ascending or descending order"
    },
    {
      "name": "FeatureTransformer",
      "description": "Applies transformation expressions to modify feature attributes and properties"
    },
    {
      "name": "FeatureTypeFilter",
      "description": "Filters features by feature type"
    },
    {
      "name": "FeatureWriter",
      "description": "Writes features from various formats"
    },
    {
      "name": "FilePathExtractor",
      "description": "Extracts file paths from directories or archives, creating features for each discovered file"
    },
    {
      "name": "FilePropertyExtractor",
      "description": "Extracts file system properties (type, size, timestamps) from files"
    },
    {
      "name": "FileReader",
      "description": "Reads features from a file"
    },
    {
      "name": "FileWriter",
      "description": "Write Features to Files in Various Formats"
    },
    {
      "name": "GeoJsonReader",
      "description": "Reads geographic features from GeoJSON files, supporting both single features and feature collections"
    },
    {
      "name": "GeoJsonWriter",
      "description": "Writes geographic features to GeoJSON files with optional grouping"
    },
    {
      "name": "GeometryCoercer",
      "description": "Coerces and converts feature geometries to specified target geometry types"
    },
    {
      "name": "GeometryDissolver",
      "description": "Dissout les géométries"
    },
    {
      "name": "GeometryExtractor",
      "description": "Extract Geometry Data to Attribute"
    },
    {
      "name": "GeometryFilter",
      "description": "Filter Features by Geometry Type"
    },
    {
      "name": "GeometryLodFilter",
      "description": "Filtre la géométrie par niveau de détail (lod)"
    },
    {
      "name": "GeometryReplacer",
      "description": "Replace Feature Geometry from Attribute"
    },
    {
      "name": "GeometrySplitter",
      "description": "Split Multi-Geometries into Individual Features"
    },
    {
      "name": "GeometryValidator",
      "description": "Validate Feature Geometry Quality"
    },
    {
      "name": "GeometryValueFilter",
      "description": "Filter Features by Geometry Value Type"
    },
    {
      "name": "GltfWriter",
      "description": "Writes 3D features to GLTF format with optional texture attachment"
    },
    {
      "name": "HoleCounter",
      "description": "Count Polygon Holes to Attribute"
    },
    {
      "name": "HoleExtractor",
      "description": "Extract Polygon Holes as Separate Features"
    },
    {
      "name": "HorizontalReprojector",
      "description": "Reproject Geometry to Different Coordinate System"
    },
    {
      "name": "InputRouter",
      "description": "Action for first port forwarding for sub-workflows."
    },
    {
      "name": "JPStandardGridAccumulator",
      "description": "Divides geometries into Japanese standard mesh grid (1km) and adds mesh codes to features"
    },
    {
      "name": "LineOnLineOverlayer",
      "description": "Intersection points are turned into point features that can contain the merged list of attributes of the original intersected lines."
    },
    {
      "name": "ListExploder",
      "description": "Explodes array attributes into separate features, creating one feature per array element"
    },
    {
      "name": "MVTWriter",
      "description": "Writes vector features to Mapbox Vector Tiles (MVT) format for web mapping"
    },
    {
      "name": "NoopProcessor",
      "description": "No-Operation Pass-Through Processor"
    },
    {
      "name": "NoopSink",
      "description": "No-Operation Sink (Discard Features)"
    },
    {
      "name": "Offsetter",
      "description": "Apply Coordinate Offsets to Geometry"
    },
    {
      "name": "OrientationExtractor",
      "description": "Extract Polygon Orientation to Attribute"
    },
    {
      "name": "OutputRouter",
      "description": "Action for last port forwarding for sub-workflows."
    },
    {
      "name": "PLATEAU3.AttributeFlattener",
      "description": "Flattens hierarchical PLATEAU3 building attributes into flat structure for analysis"
    },
    {
      "name": "PLATEAU3.BuildingInstallationGeometryTypeExtractor",
      "description": "Extracts BuildingInstallationGeometryType"
    },
    {
      "name": "PLATEAU3.BuildingUsageAttributeValidator",
      "description": "This processor validates building usage attributes by checking for the presence of required attributes and ensuring the correctness of city codes. It outputs errors through the lBldgError and codeError ports if any issues are found."
    },
    {
      "name": "PLATEAU3.DictionariesInitiator",
      "description": "Initializes dictionaries for PLATEAU"
    },
    {
      "name": "PLATEAU3.DomainOfDefinitionValidator",
      "description": "Validates domain of definition of CityGML features"
    },
    {
      "name": "PLATEAU3.MaxLodExtractor",
      "description": "Extracts maxLod"
    },
    {
      "name": "PLATEAU3.TranXLinkChecker",
      "description": "Check Xlink for Tran"
    },
    {
      "name": "PLATEAU3.UDXFolderExtractor",
      "description": "Extracts UDX folders from cityGML path"
    },
    {
      "name": "PLATEAU3.UnmatchedXlinkDetector",
      "description": "Detect unmatched xlink for PLATEAU"
    },
    {
      "name": "PLATEAU3.XMLAttributeExtractor",
      "description": "Extracts attributes from XML fragments based on a schema definition"
    },
    {
      "name": "PLATEAU4.AttributeFlattener",
      "description": "Flatten attributes for building feature"
    },
    {
      "name": "PLATEAU4.CityCodeExtractor",
      "description": "Extracts city code information from PLATEAU4 codelists for local public authorities"
    },
    {
      "name": "PLATEAU4.DomainOfDefinitionValidator",
      "description": "Validates domain of definition of CityGML features"
    },
    {
      "name": "PLATEAU4.MaxLodExtractor",
      "description": "Extracts maxLod"
    },
    {
      "name": "PLATEAU4.MissingAttributeDetector",
      "description": "Detect missing attributes"
    },
    {
      "name": "PLATEAU4.ObjectListExtractor",
      "description": "Extract object list"
    },
    {
      "name": "PLATEAU4.UDXFolderExtractor",
      "description": "Extracts UDX folders from cityGML path"
    },
    {
      "name": "PlanarityFilter",
      "description": "Filter Features by Geometry Planarity"
    },
    {
      "name": "Refiner",
      "description": "Refine Complex Geometries into Simple Geometries"
    },
    {
      "name": "RhaiCaller",
      "description": "Executes Rhai script expressions to conditionally process and transform features"
    },
    {
      "name": "ShapefileWriter",
      "description": "Writes geographic features to ESRI Shapefile format with optional grouping"
    },
    {
      "name": "SqlReader",
      "description": "Read Features from SQL Database"
    },
    {
      "name": "StatisticsCalculator",
      "description": "Calculates statistical aggregations on feature attributes with customizable expressions"
    },
    {
      "name": "SurfaceFootprintReplacer",
      "description": "Replace the geometry with its footprint"
    },
    {
      "name": "ThreeDimensionBoxReplacer",
      "description": "Replace Geometry with 3D Box from Attributes"
    },
    {
      "name": "ThreeDimensionPlanarityRotator",
      "description": "Rotates a single or a set of 2D geometries in 3D space to align them horizontally."
    },
    {
      "name": "ThreeDimensionRotator",
      "description": "Rotate 3D Geometry Around Arbitrary Axis"
    },
    {
      "name": "TwoDimensionForcer",
      "description": "Force 3D Geometry to 2D by Removing Z-Coordinates"
    },
    {
      "name": "VertexRemover",
      "description": "Remove Redundant Vertices from Geometry"
    },
    {
      "name": "VerticalReprojector",
      "description": "Reproject Vertical Coordinates Between Datums"
    },
    {
      "name": "WasmRuntimeExecutor",
      "description": "Compiles scripts (Python) into WebAssembly and executes them in a WASM runtime"
    },
    {
      "name": "XMLFragmenter",
      "description": "Fragments large XML documents into smaller pieces based on specified element patterns"
    },
    {
      "name": "XMLValidator",
      "description": "Validates XML documents against XSD schemas with success/failure routing"
    },
    {
      "name": "ZipFileWriter",
      "description": "Writes features to a zip file"
    }
  ]
}