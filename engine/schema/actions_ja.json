{
  "actions": [
    {
      "name": "AreaOnAreaOverlayer",
      "type": "processor",
      "description": "あるエリアの上に別のエリアを重ね合わせる",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "AreaOnAreaOverlayerParam",
        "type": "object",
        "properties": {
          "groupBy": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/$defs/Attribute"
            }
          },
          "outputAttribute": {
            "$ref": "#/$defs/Attribute"
          }
        },
        "required": [
          "outputAttribute"
        ],
        "$defs": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "area",
        "remnants",
        "rejected"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "AttributeAggregator",
      "type": "processor",
      "description": "属性に基づいてフィーチャをグルーピングする",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "AttributeAggregatorParam",
        "type": "object",
        "properties": {
          "aggregateAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/AggregateAttribute"
            }
          },
          "calculation": {
            "anyOf": [
              {
                "$ref": "#/$defs/Expr"
              },
              {
                "type": "null"
              }
            ]
          },
          "calculationValue": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          },
          "calculationAttribute": {
            "$ref": "#/$defs/Attribute"
          },
          "method": {
            "$ref": "#/$defs/Method"
          }
        },
        "required": [
          "aggregateAttributes",
          "calculationAttribute",
          "method"
        ],
        "$defs": {
          "AggregateAttribute": {
            "type": "object",
            "properties": {
              "newAttribute": {
                "$ref": "#/$defs/Attribute"
              },
              "attribute": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Attribute"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "attributeValue": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Expr"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            },
            "required": [
              "newAttribute"
            ]
          },
          "Attribute": {
            "type": "string"
          },
          "Expr": {
            "type": "string"
          },
          "Method": {
            "type": "string",
            "enum": [
              "max",
              "min",
              "count"
            ]
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Attribute"
      ]
    },
    {
      "name": "AttributeDuplicateFilter",
      "type": "processor",
      "description": "重複した属性を持つフィーチャをフィルタリングする",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "AttributeDuplicateFilterParam",
        "type": "object",
        "properties": {
          "filterBy": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/Attribute"
            }
          }
        },
        "required": [
          "filterBy"
        ],
        "$defs": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Attribute"
      ]
    },
    {
      "name": "AttributeFilePathInfoExtractor",
      "type": "processor",
      "description": "属性からファイルパス情報を抽出する",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "AttributeFilePathInfoExtractor",
        "type": "object",
        "properties": {
          "attribute": {
            "$ref": "#/$defs/Attribute"
          }
        },
        "required": [
          "attribute"
        ],
        "$defs": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "rejected"
      ],
      "categories": [
        "Attribute"
      ]
    },
    {
      "name": "AttributeManager",
      "type": "processor",
      "description": "属性を管理する",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "AttributeManagerParam",
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/Operation"
            }
          }
        },
        "required": [
          "operations"
        ],
        "$defs": {
          "Operation": {
            "type": "object",
            "properties": {
              "attribute": {
                "type": "string"
              },
              "method": {
                "$ref": "#/$defs/Method"
              },
              "value": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Expr"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            },
            "required": [
              "attribute",
              "method"
            ]
          },
          "Method": {
            "type": "string",
            "enum": [
              "convert",
              "create",
              "rename",
              "remove"
            ]
          },
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Attribute"
      ]
    },
    {
      "name": "AttributeMapper",
      "type": "processor",
      "description": "属性をマッピングする",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "AttributeMapperParam",
        "type": "object",
        "properties": {
          "mappers": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/Mapper"
            }
          }
        },
        "required": [
          "mappers"
        ],
        "$defs": {
          "Mapper": {
            "type": "object",
            "properties": {
              "attribute": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "expr": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Expr"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "valueAttribute": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "parentAttribute": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "childAttribute": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "multipleExpr": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Expr"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          },
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Attribute"
      ]
    },
    {
      "name": "BoundsExtractor",
      "type": "processor",
      "description": "境界を抽出する",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "rejected"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "Bufferer",
      "type": "processor",
      "description": "ジオメトリの周囲にバッファを作成する",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "Bufferer",
        "type": "object",
        "properties": {
          "bufferType": {
            "$ref": "#/$defs/BufferType"
          },
          "distance": {
            "type": "number",
            "format": "double"
          },
          "interpolationAngle": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "bufferType",
          "distance",
          "interpolationAngle"
        ],
        "$defs": {
          "BufferType": {
            "type": "string",
            "enum": [
              "area2d"
            ]
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "rejected"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "BulkAttributeRenamer",
      "type": "processor",
      "description": "属性名にプレフィックス／サフィックスを追加・削除、またはテキスト置換して一括でリネームする",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "BulkAttributeRenamerParam",
        "type": "object",
        "properties": {
          "renameType": {
            "$ref": "#/$defs/RenameType"
          },
          "renameAction": {
            "$ref": "#/$defs/RenameAction"
          },
          "textToFind": {
            "type": [
              "string",
              "null"
            ]
          },
          "renameValue": {
            "type": "string"
          },
          "selectedAttributes": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "renameType",
          "renameAction",
          "renameValue"
        ],
        "$defs": {
          "RenameType": {
            "type": "string",
            "enum": [
              "All",
              "Selected"
            ]
          },
          "RenameAction": {
            "type": "string",
            "enum": [
              "AddPrefix",
              "AddSuffix",
              "RemovePrefix",
              "RemoveSuffix",
              "StringReplace"
            ]
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Attribute"
      ]
    },
    {
      "name": "CenterPointReplacer",
      "type": "processor",
      "description": "フィーチャのジオメトリを、フィーチャのバウンディングボックス中央や質量中心、またはフィーチャ領域内に確実に収まる点で置き換える",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "point",
        "rejected"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "Cesium3DTilesWriter",
      "type": "sink",
      "description": "フィーチャをファイルに書き出す",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "Cesium3DTilesWriterParam",
        "type": "object",
        "properties": {
          "output": {
            "$ref": "#/$defs/Expr"
          },
          "minZoom": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          },
          "maxZoom": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          },
          "attachTexture": {
            "type": [
              "boolean",
              "null"
            ]
          }
        },
        "required": [
          "output",
          "minZoom",
          "maxZoom"
        ],
        "$defs": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [],
      "categories": [
        "File"
      ]
    },
    {
      "name": "Clipper",
      "type": "processor",
      "description": "クリッパーフィーチャを用いて候補フィーチャを分割し、内部または外部の部分を別々に出力する",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "clipper",
        "candidate"
      ],
      "outputPorts": [
        "inside",
        "outside",
        "rejected"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "ClosedCurveFilter",
      "type": "processor",
      "description": "曲線が閉ループになっているか確認する",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "closed",
        "open",
        "rejected"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "CoordinateSystemSetter",
      "type": "processor",
      "description": "フィーチャの座標系を設定する",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "CoordinateSystemSetter",
        "type": "object",
        "properties": {
          "epsgCode": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0
          }
        },
        "required": [
          "epsgCode"
        ]
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "DimensionFilter",
      "type": "processor",
      "description": "フィーチャを次元に基づいてフィルタリングする",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "2d",
        "3d",
        "rejected"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "EchoProcessor",
      "type": "processor",
      "description": "フィーチャをエコー出力する",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Debug"
      ]
    },
    {
      "name": "EchoSink",
      "type": "sink",
      "description": "フィーチャをエコー出力する",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [],
      "categories": [
        "Debug"
      ]
    },
    {
      "name": "ElevationExtractor",
      "type": "processor",
      "description": "フィーチャの最初のZ座標値を抽出し、属性として格納する",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "ElevationExtractorParam",
        "type": "object",
        "properties": {
          "outputAttribute": {
            "$ref": "#/$defs/Attribute"
          }
        },
        "required": [
          "outputAttribute"
        ],
        "$defs": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "Extruder",
      "type": "processor",
      "description": "ポリゴンを一定の距離で押し出す（エクストルード）",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "ExtruderParam",
        "type": "object",
        "properties": {
          "distance": {
            "$ref": "#/$defs/Expr"
          }
        },
        "required": [
          "distance"
        ],
        "$defs": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "FeatureCounter",
      "type": "processor",
      "description": "フィーチャ数をカウントする",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "FeatureCounterParam",
        "type": "object",
        "properties": {
          "countStart": {
            "type": "integer",
            "format": "int64"
          },
          "groupBy": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/$defs/Attribute"
            }
          },
          "outputAttribute": {
            "type": "string"
          }
        },
        "required": [
          "countStart",
          "outputAttribute"
        ],
        "$defs": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "rejected"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "FeatureCreator",
      "type": "source",
      "description": "式に基づいてフィーチャを作成する",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "FeatureCreator",
        "type": "object",
        "properties": {
          "creator": {
            "$ref": "#/$defs/Expr"
          }
        },
        "required": [
          "creator"
        ],
        "$defs": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "FeatureFilePathExtractor",
      "type": "processor",
      "description": "Extracts features by file path",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "FeatureFilePathExtractorParam",
        "type": "object",
        "properties": {
          "sourceDataset": {
            "$ref": "#/$defs/Expr"
          },
          "extractArchive": {
            "type": "boolean"
          }
        },
        "required": [
          "sourceDataset",
          "extractArchive"
        ],
        "$defs": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "unfiltered"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "FeatureFilter",
      "type": "processor",
      "description": "条件に基づいてフィーチャをフィルタリングする",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "FeatureFilterParam",
        "type": "object",
        "properties": {
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/Condition"
            }
          }
        },
        "required": [
          "conditions"
        ],
        "$defs": {
          "Condition": {
            "type": "object",
            "properties": {
              "expr": {
                "$ref": "#/$defs/Expr"
              },
              "outputPort": {
                "$ref": "#/$defs/Port"
              }
            },
            "required": [
              "expr",
              "outputPort"
            ]
          },
          "Expr": {
            "type": "string"
          },
          "Port": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "unfiltered"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "FeatureLodFilter",
      "type": "processor",
      "description": "Filter Geometry by lod",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "FeatureLodFilterParam",
        "type": "object",
        "properties": {
          "filterKey": {
            "$ref": "#/$defs/Attribute"
          }
        },
        "required": [
          "filterKey"
        ],
        "$defs": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "up_to_lod1",
        "up_to_lod2",
        "up_to_lod3",
        "up_to_lod4",
        "unfiltered"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "FeatureMerger",
      "type": "processor",
      "description": "属性に基づいてフィーチャをマージする",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "FeatureMergerParam",
        "type": "object",
        "properties": {
          "requestorAttribute": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/$defs/Attribute"
            }
          },
          "supplierAttribute": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/$defs/Attribute"
            }
          },
          "requestorAttributeValue": {
            "anyOf": [
              {
                "$ref": "#/$defs/Expr"
              },
              {
                "type": "null"
              }
            ]
          },
          "supplierAttributeValue": {
            "anyOf": [
              {
                "$ref": "#/$defs/Expr"
              },
              {
                "type": "null"
              }
            ]
          },
          "completeGrouped": {
            "type": [
              "boolean",
              "null"
            ]
          }
        },
        "$defs": {
          "Attribute": {
            "type": "string"
          },
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "requestor",
        "supplier"
      ],
      "outputPorts": [
        "merged",
        "unmerged"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "FeatureReader",
      "type": "processor",
      "description": "条件に基づいてフィーチャをフィルタリングする",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "FeatureReaderParam",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "format": {
                "type": "string",
                "const": "citygml"
              },
              "dataset": {
                "$ref": "#/$defs/Expr"
              },
              "flatten": {
                "type": [
                  "boolean",
                  "null"
                ]
              }
            },
            "required": [
              "format",
              "dataset"
            ]
          },
          {
            "type": "object",
            "properties": {
              "format": {
                "type": "string",
                "const": "csv"
              },
              "dataset": {
                "$ref": "#/$defs/Expr"
              },
              "offset": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint",
                "minimum": 0
              }
            },
            "required": [
              "format",
              "dataset"
            ]
          },
          {
            "type": "object",
            "properties": {
              "format": {
                "type": "string",
                "const": "tsv"
              },
              "dataset": {
                "$ref": "#/$defs/Expr"
              },
              "offset": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint",
                "minimum": 0
              }
            },
            "required": [
              "format",
              "dataset"
            ]
          }
        ],
        "$defs": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "FeatureSorter",
      "type": "processor",
      "description": "フィーチャを属性でソートする",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "FeatureSorterParam",
        "type": "object",
        "properties": {
          "sortBy": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/SortBy"
            }
          }
        },
        "required": [
          "sortBy"
        ],
        "$defs": {
          "SortBy": {
            "type": "object",
            "properties": {
              "attribute": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Attribute"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "attributeValue": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Expr"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "order": {
                "$ref": "#/$defs/Order"
              }
            },
            "required": [
              "order"
            ]
          },
          "Attribute": {
            "type": "string"
          },
          "Expr": {
            "type": "string"
          },
          "Order": {
            "type": "string",
            "enum": [
              "ascending",
              "descending"
            ]
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "FeatureTransformer",
      "type": "processor",
      "description": "式を用いてフィーチャを変換する",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "FeatureTransformerParam",
        "type": "object",
        "properties": {
          "transformers": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/Transform"
            }
          }
        },
        "required": [
          "transformers"
        ],
        "$defs": {
          "Transform": {
            "type": "object",
            "properties": {
              "expr": {
                "$ref": "#/$defs/Expr"
              }
            },
            "required": [
              "expr"
            ]
          },
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "FeatureTypeFilter",
      "type": "processor",
      "description": "フィーチャタイプに基づいてフィーチャをフィルタリングする",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "FeatureTypeFilter",
        "type": "object",
        "properties": {
          "targetTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "targetTypes"
        ]
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "unfiltered"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "FilePathExtractor",
      "type": "source",
      "description": "ディレクトリまたはアーカイブからファイルを抽出する",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "FilePathExtractor",
        "type": "object",
        "properties": {
          "sourceDataset": {
            "$ref": "#/$defs/Expr"
          },
          "extractArchive": {
            "type": "boolean"
          }
        },
        "required": [
          "sourceDataset",
          "extractArchive"
        ],
        "$defs": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "File"
      ]
    },
    {
      "name": "FilePropertyExtractor",
      "type": "processor",
      "description": "ファイルからプロパティを抽出する",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "FilePropertyExtractor",
        "type": "object",
        "properties": {
          "filePathAttribute": {
            "type": "string"
          }
        },
        "required": [
          "filePathAttribute"
        ]
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "rejected"
      ],
      "categories": [
        "File"
      ]
    },
    {
      "name": "FileReader",
      "type": "source",
      "description": "ファイルからフィーチャを読み込む",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "FileReader",
        "oneOf": [
          {
            "title": "CSV",
            "type": "object",
            "properties": {
              "format": {
                "type": "string",
                "const": "csv"
              },
              "dataset": {
                "$ref": "#/$defs/Expr"
              },
              "offset": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint",
                "minimum": 0
              }
            },
            "required": [
              "format",
              "dataset"
            ]
          },
          {
            "title": "TSV",
            "type": "object",
            "properties": {
              "format": {
                "type": "string",
                "const": "tsv"
              },
              "dataset": {
                "$ref": "#/$defs/Expr"
              },
              "offset": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint",
                "minimum": 0
              }
            },
            "required": [
              "format",
              "dataset"
            ]
          },
          {
            "title": "JSON",
            "type": "object",
            "properties": {
              "format": {
                "type": "string",
                "const": "json"
              },
              "dataset": {
                "$ref": "#/$defs/Expr"
              }
            },
            "required": [
              "format",
              "dataset"
            ]
          },
          {
            "title": "CityGML",
            "type": "object",
            "properties": {
              "format": {
                "type": "string",
                "const": "citygml"
              },
              "dataset": {
                "$ref": "#/$defs/Expr"
              },
              "flatten": {
                "type": [
                  "boolean",
                  "null"
                ]
              }
            },
            "required": [
              "format",
              "dataset"
            ]
          }
        ],
        "$defs": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "File"
      ]
    },
    {
      "name": "FileWriter",
      "type": "sink",
      "description": "フィーチャをファイルに書き出す",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "FileWriterParam",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "format": {
                "type": "string",
                "const": "csv"
              },
              "output": {
                "$ref": "#/$defs/Expr"
              }
            },
            "required": [
              "format",
              "output"
            ]
          },
          {
            "type": "object",
            "properties": {
              "format": {
                "type": "string",
                "const": "tsv"
              },
              "output": {
                "$ref": "#/$defs/Expr"
              }
            },
            "required": [
              "format",
              "output"
            ]
          },
          {
            "type": "object",
            "properties": {
              "format": {
                "type": "string",
                "const": "json"
              },
              "output": {
                "$ref": "#/$defs/Expr"
              },
              "converter": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Expr"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            },
            "required": [
              "format",
              "output"
            ]
          },
          {
            "type": "object",
            "properties": {
              "format": {
                "type": "string",
                "const": "excel"
              },
              "output": {
                "$ref": "#/$defs/Expr"
              },
              "sheetName": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "required": [
              "format",
              "output"
            ]
          }
        ],
        "$defs": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [],
      "categories": [
        "File"
      ]
    },
    {
      "name": "GeoJsonWriter",
      "type": "sink",
      "description": "フィーチャをGeoJSONファイルに書き出す",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "GeoJsonWriterParam",
        "type": "object",
        "properties": {
          "output": {
            "$ref": "#/$defs/Expr"
          },
          "groupBy": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/$defs/Attribute"
            }
          }
        },
        "required": [
          "output"
        ],
        "$defs": {
          "Expr": {
            "type": "string"
          },
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [],
      "categories": [
        "File"
      ]
    },
    {
      "name": "GeometryCoercer",
      "type": "processor",
      "description": "フィーチャのジオメトリを特定のジオメトリタイプに強制変換する",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "GeometryCoercer",
        "type": "object",
        "properties": {
          "coercerType": {
            "$ref": "#/$defs/CoercerType"
          }
        },
        "required": [
          "coercerType"
        ],
        "$defs": {
          "CoercerType": {
            "type": "string",
            "enum": [
              "lineString"
            ]
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "GeometryDissolver",
      "type": "processor",
      "description": "ジオメトリをディゾルブ（結合）する",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "GeometryDissolverParam",
        "type": "object",
        "properties": {
          "groupBy": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/$defs/Attribute"
            }
          },
          "completeGrouped": {
            "type": [
              "boolean",
              "null"
            ]
          }
        },
        "$defs": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "area",
        "rejected"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "GeometryExtractor",
      "type": "processor",
      "description": "フィーチャからジオメトリを抽出し、属性として追加する",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "GeometryExtractor",
        "type": "object",
        "properties": {
          "outputAttribute": {
            "$ref": "#/$defs/Attribute"
          }
        },
        "required": [
          "outputAttribute"
        ],
        "$defs": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "GeometryFilter",
      "type": "processor",
      "description": "ジオメトリをタイプに基づいてフィルタリングする",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "GeometryFilterParam",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "filterType": {
                "type": "string",
                "const": "none"
              }
            },
            "required": [
              "filterType"
            ]
          },
          {
            "type": "object",
            "properties": {
              "filterType": {
                "type": "string",
                "const": "multiple"
              }
            },
            "required": [
              "filterType"
            ]
          },
          {
            "type": "object",
            "properties": {
              "filterType": {
                "type": "string",
                "const": "geometryType"
              }
            },
            "required": [
              "filterType"
            ]
          }
        ]
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "unfiltered",
        "none",
        "contains",
        "point",
        "line",
        "lineString",
        "polygon",
        "multiPoint",
        "multiLineString",
        "multiPolygon",
        "rect",
        "triangle",
        "solid",
        "geometryCollection",
        "solid",
        "multiSurface",
        "compositeSurface",
        "surface",
        "triangle",
        "multiCurve",
        "curve",
        "multiPoint",
        "point",
        "tin"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "GeometryReplacer",
      "type": "processor",
      "description": "フィーチャのジオメトリを新しいジオメトリで置き換える",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "GeometryReplacer",
        "type": "object",
        "properties": {
          "sourceAttribute": {
            "$ref": "#/$defs/Attribute"
          }
        },
        "required": [
          "sourceAttribute"
        ],
        "$defs": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "GeometrySplitter",
      "type": "processor",
      "description": "ジオメトリをタイプ別に分割する",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "GeometryValidator",
      "type": "processor",
      "description": "フィーチャのジオメトリを検証する",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "GeometryValidator",
        "type": "object",
        "properties": {
          "validationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/ValidationType"
            }
          }
        },
        "required": [
          "validationTypes"
        ],
        "$defs": {
          "ValidationType": {
            "type": "string",
            "enum": [
              "duplicatePoints",
              "corruptGeometry",
              "selfIntersection"
            ]
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "success",
        "failed",
        "rejected"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "GeometryValueFilter",
      "type": "processor",
      "description": "値に基づいてジオメトリをフィルタリングする",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "none",
        "geometry2d",
        "geometry3d",
        "cityGml"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "GltfWriter",
      "type": "sink",
      "description": "フィーチャをGltfファイルに書き出す",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "GltfWriterParam",
        "type": "object",
        "properties": {
          "output": {
            "$ref": "#/$defs/Expr"
          },
          "attachTexture": {
            "type": [
              "boolean",
              "null"
            ]
          }
        },
        "required": [
          "output"
        ],
        "$defs": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [],
      "categories": [
        "File"
      ]
    },
    {
      "name": "HoleCounter",
      "type": "processor",
      "description": "ジオメトリ内の穴の数をカウントし、属性として追加する",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "HoleCounterParam",
        "type": "object",
        "properties": {
          "outputAttribute": {
            "$ref": "#/$defs/Attribute"
          }
        },
        "required": [
          "outputAttribute"
        ],
        "$defs": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "HoleExtractor",
      "type": "processor",
      "description": "ジオメトリ内の穴を抽出し、属性として追加する",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "outershell",
        "hole",
        "rejected"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "HorizontalReprojector",
      "type": "processor",
      "description": "フィーチャのジオメトリを指定された座標系に水平再投影する",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "HorizontalReprojectorParam",
        "type": "object",
        "properties": {
          "epsgCode": {
            "type": [
              "integer",
              "null"
            ],
            "format": "uint16",
            "minimum": 0
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "InputRouter",
      "type": "processor",
      "description": "サブワークフローで最初のポートを転送するアクション",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "InputRouter",
        "type": "object",
        "properties": {
          "routingPort": {
            "type": "string"
          }
        },
        "required": [
          "routingPort"
        ]
      },
      "builtin": true,
      "inputPorts": [],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "System"
      ]
    },
    {
      "name": "LineOnLineOverlayer",
      "type": "processor",
      "description": "交点を点フィーチャに変換し、元の交差したラインの属性リストを結合して含めることができる",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "LineOnLineOverlayerParam",
        "type": "object",
        "properties": {
          "groupBy": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/$defs/Attribute"
            }
          },
          "outputAttribute": {
            "$ref": "#/$defs/Attribute"
          }
        },
        "required": [
          "outputAttribute"
        ],
        "$defs": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "point",
        "line",
        "rejected"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "ListExploder",
      "type": "processor",
      "description": "リスト属性を複数の要素に分解する",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "ListExploder",
        "type": "object",
        "properties": {
          "sourceAttribute": {
            "$ref": "#/$defs/Attribute"
          }
        },
        "required": [
          "sourceAttribute"
        ],
        "$defs": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "MVTWriter",
      "type": "sink",
      "description": "フィーチャをファイルに書き出す",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "MVTWriterParam",
        "type": "object",
        "properties": {
          "output": {
            "$ref": "#/$defs/Expr"
          },
          "layerName": {
            "$ref": "#/$defs/Expr"
          },
          "minZoom": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          },
          "maxZoom": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0
          }
        },
        "required": [
          "output",
          "layerName",
          "minZoom",
          "maxZoom"
        ],
        "$defs": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [],
      "categories": [
        "File"
      ]
    },
    {
      "name": "NoopProcessor",
      "type": "processor",
      "description": "フィーチャに対して何も処理しない",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Noop"
      ]
    },
    {
      "name": "NoopSink",
      "type": "sink",
      "description": "最終的な処理を行わない",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [],
      "categories": [
        "Noop"
      ]
    },
    {
      "name": "Offsetter",
      "type": "processor",
      "description": "フィーチャの座標にオフセットを加える",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "OffsetterParam",
        "type": "object",
        "properties": {
          "offsetX": {
            "type": [
              "number",
              "null"
            ],
            "format": "double"
          },
          "offsetY": {
            "type": [
              "number",
              "null"
            ],
            "format": "double"
          },
          "offsetZ": {
            "type": [
              "number",
              "null"
            ],
            "format": "double"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "OrientationExtractor",
      "type": "processor",
      "description": "フィーチャのジオメトリの方向を抽出し、属性として追加する",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "OrientationExtractorParam",
        "type": "object",
        "properties": {
          "outputAttribute": {
            "$ref": "#/$defs/Attribute"
          }
        },
        "required": [
          "outputAttribute"
        ],
        "$defs": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "OutputRouter",
      "type": "processor",
      "description": "サブワークフローで最後のポートを転送するアクション",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "OutputRouter",
        "type": "object",
        "properties": {
          "routingPort": {
            "type": "string"
          }
        },
        "required": [
          "routingPort"
        ]
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [],
      "categories": [
        "System"
      ]
    },
    {
      "name": "PLATEAU3.AttributeFlattener",
      "type": "processor",
      "description": "建物フィーチャを作成するために属性をフラット化する",
      "parameter": null,
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU3.BuildingInstallationGeometryTypeExtractor",
      "type": "processor",
      "description": "建物インスタレーションジオメトリタイプ（BuildingInstallationGeometryType）を抽出する",
      "parameter": null,
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU3.BuildingUsageAttributeValidator",
      "type": "processor",
      "description": "必要な属性の存在や都市コードの正しさを確認し、建物利用属性を検証する。問題があればlBldgErrorおよびcodeErrorポートを通じてエラーを出力する。",
      "parameter": null,
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "lBldgError",
        "codeError",
        "default"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU3.DictionariesInitiator",
      "type": "processor",
      "description": "PLATEAU用の辞書を初期化する",
      "parameter": null,
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "rejected"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU3.DomainOfDefinitionValidator",
      "type": "processor",
      "description": "CityGMLフィーチャの定義域を検証する",
      "parameter": null,
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "rejected"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU3.MaxLodExtractor",
      "type": "processor",
      "description": "maxLodを抽出する",
      "parameter": null,
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU3.TranXLinkChecker",
      "type": "processor",
      "description": "TranのXlinkをチェックする",
      "parameter": null,
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU3.UDXFolderExtractor",
      "type": "processor",
      "description": "cityGMLパスからUDXフォルダを抽出する",
      "parameter": null,
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "rejected"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU3.UnmatchedXlinkDetector",
      "type": "processor",
      "description": "PLATEAUで一致しないxlinkを検出する",
      "parameter": null,
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "summary",
        "unMatchedXlinkFrom",
        "unMatchedXlinkTo"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU3.XMLAttributeExtractor",
      "type": "processor",
      "description": "スキーマ定義に基づいてXML断片から属性を抽出する",
      "parameter": null,
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "attributeFeature",
        "summary",
        "filePath"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU4.AttributeFlattener",
      "type": "processor",
      "description": "Flatten attributes for building feature",
      "parameter": null,
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU4.MaxLodExtractor",
      "type": "processor",
      "description": "Extracts maxLod",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "MaxLodExtractorParam",
        "type": "object",
        "properties": {
          "cityGmlPathAttribute": {
            "$ref": "#/$defs/Attribute"
          },
          "maxLodAttribute": {
            "$ref": "#/$defs/Attribute"
          }
        },
        "required": [
          "cityGmlPathAttribute",
          "maxLodAttribute"
        ],
        "$defs": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU4.UDXFolderExtractor",
      "type": "processor",
      "description": "Extracts UDX folders from cityGML path",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "UDXFolderExtractorParam",
        "type": "object",
        "properties": {
          "cityGmlPath": {
            "$ref": "#/$defs/Expr"
          }
        },
        "required": [
          "cityGmlPath"
        ],
        "$defs": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "rejected"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PlanarityFilter",
      "type": "processor",
      "description": "タイプに基づいてジオメトリをフィルタリングする",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "planarity",
        "notplanarity"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "Refiner",
      "type": "processor",
      "description": "ジオメトリを精緻化する",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "remain"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "RhaiCaller",
      "type": "processor",
      "description": "Rhaiスクリプトを呼び出す",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "RhaiCallerParam",
        "type": "object",
        "properties": {
          "isTarget": {
            "$ref": "#/$defs/Expr"
          },
          "process": {
            "$ref": "#/$defs/Expr"
          }
        },
        "required": [
          "isTarget",
          "process"
        ],
        "$defs": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "StatisticsCalculator",
      "type": "processor",
      "description": "フィーチャの統計情報を計算する",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "StatisticsCalculatorParam",
        "type": "object",
        "properties": {
          "aggregateName": {
            "anyOf": [
              {
                "$ref": "#/$defs/Attribute"
              },
              {
                "type": "null"
              }
            ]
          },
          "aggregateAttribute": {
            "anyOf": [
              {
                "$ref": "#/$defs/Attribute"
              },
              {
                "type": "null"
              }
            ]
          },
          "calculations": {
            "type": "array",
            "items": {
              "$ref": "#/$defs/Calculation"
            }
          }
        },
        "required": [
          "calculations"
        ],
        "$defs": {
          "Attribute": {
            "type": "string"
          },
          "Calculation": {
            "type": "object",
            "properties": {
              "newAttribute": {
                "$ref": "#/$defs/Attribute"
              },
              "expr": {
                "$ref": "#/$defs/Expr"
              }
            },
            "required": [
              "newAttribute",
              "expr"
            ]
          },
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "complete"
      ],
      "categories": [
        "Attribute"
      ]
    },
    {
      "name": "ThreeDimensionBoxReplacer",
      "type": "processor",
      "description": "3次元ボックスをポリゴンで置き換える",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "ThreeDimensionBoxReplacer",
        "type": "object",
        "properties": {
          "minX": {
            "$ref": "#/$defs/Attribute"
          },
          "minY": {
            "$ref": "#/$defs/Attribute"
          },
          "minZ": {
            "$ref": "#/$defs/Attribute"
          },
          "maxX": {
            "$ref": "#/$defs/Attribute"
          },
          "maxY": {
            "$ref": "#/$defs/Attribute"
          },
          "maxZ": {
            "$ref": "#/$defs/Attribute"
          }
        },
        "required": [
          "minX",
          "minY",
          "minZ",
          "maxX",
          "maxY",
          "maxZ"
        ],
        "$defs": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "ThreeDimensionRotator",
      "type": "processor",
      "description": "3次元ボックスをポリゴンで置き換える",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "ThreeDimensionRotatorParam",
        "type": "object",
        "properties": {
          "angleDegree": {
            "$ref": "#/$defs/Expr"
          },
          "originX": {
            "$ref": "#/$defs/Expr"
          },
          "originY": {
            "$ref": "#/$defs/Expr"
          },
          "originZ": {
            "$ref": "#/$defs/Expr"
          },
          "directionX": {
            "$ref": "#/$defs/Expr"
          },
          "directionY": {
            "$ref": "#/$defs/Expr"
          },
          "directionZ": {
            "$ref": "#/$defs/Expr"
          }
        },
        "required": [
          "angleDegree",
          "originX",
          "originY",
          "originZ",
          "directionX",
          "directionY",
          "directionZ"
        ],
        "$defs": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "TwoDimensionForcer",
      "type": "processor",
      "description": "ジオメトリを2次元に強制する",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "VertexRemover",
      "type": "processor",
      "description": "フィーチャのジオメトリから特定の頂点を削除する",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "rejected"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "VerticalReprojector",
      "type": "processor",
      "description": "フィーチャのジオメトリを指定された座標系に垂直再投影する",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "VerticalReprojectorParam",
        "type": "object",
        "properties": {
          "reprojectorType": {
            "$ref": "#/$defs/VerticalReprojectorType"
          }
        },
        "required": [
          "reprojectorType"
        ],
        "$defs": {
          "VerticalReprojectorType": {
            "type": "string",
            "enum": [
              "jgd2011ToWgs84"
            ]
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "WasmRuntimeExecutor",
      "type": "processor",
      "description": "スクリプトを.wasmにコンパイルし、wasmランタイムで実行する",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "WasmRuntimeExecutorParam",
        "type": "object",
        "properties": {
          "sourceCodeFilePath": {
            "type": "string"
          },
          "processorType": {
            "$ref": "#/$defs/ProcessorType"
          },
          "programmingLanguage": {
            "$ref": "#/$defs/ProgrammingLanguage"
          }
        },
        "required": [
          "sourceCodeFilePath",
          "processorType",
          "programmingLanguage"
        ],
        "$defs": {
          "ProcessorType": {
            "type": "string",
            "enum": [
              "Attribute"
            ]
          },
          "ProgrammingLanguage": {
            "type": "string",
            "enum": [
              "Python"
            ]
          }
        }
      },
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Wasm"
      ]
    },
    {
      "name": "XMLFragmenter",
      "type": "processor",
      "description": "XMLを分割する",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "XmlFragmenterParam",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "elementsToMatch": {
                "$ref": "#/$defs/Expr"
              },
              "elementsToExclude": {
                "$ref": "#/$defs/Expr"
              },
              "attribute": {
                "$ref": "#/$defs/Attribute"
              },
              "source": {
                "type": "string",
                "const": "url"
              }
            },
            "required": [
              "source",
              "elementsToMatch",
              "elementsToExclude",
              "attribute"
            ]
          }
        ],
        "$defs": {
          "Expr": {
            "type": "string"
          },
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "XML"
      ]
    },
    {
      "name": "XMLValidator",
      "type": "processor",
      "description": "XMLコンテンツを検証する",
      "parameter": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "title": "XmlValidatorParam",
        "type": "object",
        "properties": {
          "attribute": {
            "$ref": "#/$defs/Attribute"
          },
          "inputType": {
            "$ref": "#/$defs/XmlInputType"
          },
          "validationType": {
            "$ref": "#/$defs/ValidationType"
          }
        },
        "required": [
          "attribute",
          "inputType",
          "validationType"
        ],
        "$defs": {
          "Attribute": {
            "type": "string"
          },
          "XmlInputType": {
            "type": "string",
            "enum": [
              "file",
              "text"
            ]
          },
          "ValidationType": {
            "type": "string",
            "enum": [
              "syntax",
              "syntaxAndNamespace",
              "syntaxAndSchema"
            ]
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "success",
        "failed"
      ],
      "categories": [
        "PLATEAU"
      ]
    }
  ]
}
