{
  "actions": [
    {
      "name": "AreaOnAreaOverlayer",
      "type": "processor",
      "description": "Superpose une zone sur une autre zone",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AreaOnAreaOverlayerParam",
        "type": "object",
        "properties": {
          "groupBy": {
            "title": "Group by",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/Attribute"
            }
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "area",
        "remnants",
        "rejected"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "AttributeAggregator",
      "type": "processor",
      "description": "Regroupe les entités selon leurs attributs",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AttributeAggregatorParam",
        "type": "object",
        "required": [
          "aggregateAttributes",
          "calculationAttribute",
          "method"
        ],
        "properties": {
          "aggregateAttributes": {
            "title": "List of attributes to aggregate",
            "type": "array",
            "items": {
              "$ref": "#/definitions/AggregateAttribute"
            }
          },
          "calculation": {
            "title": "Calculation to perform",
            "anyOf": [
              {
                "$ref": "#/definitions/Expr"
              },
              {
                "type": "null"
              }
            ]
          },
          "calculationAttribute": {
            "title": "Attribute to store calculation result",
            "allOf": [
              {
                "$ref": "#/definitions/Attribute"
              }
            ]
          },
          "calculationValue": {
            "title": "Value to use for calculation",
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          },
          "method": {
            "title": "Method to use for aggregation",
            "allOf": [
              {
                "$ref": "#/definitions/Method"
              }
            ]
          }
        },
        "definitions": {
          "AggregateAttribute": {
            "type": "object",
            "required": [
              "newAttribute"
            ],
            "properties": {
              "attribute": {
                "title": "Existing attribute to use",
                "anyOf": [
                  {
                    "$ref": "#/definitions/Attribute"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "attributeValue": {
                "title": "Value to use for attribute",
                "anyOf": [
                  {
                    "$ref": "#/definitions/Expr"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "newAttribute": {
                "title": "New attribute to create",
                "allOf": [
                  {
                    "$ref": "#/definitions/Attribute"
                  }
                ]
              }
            }
          },
          "Attribute": {
            "type": "string"
          },
          "Expr": {
            "type": "string"
          },
          "Method": {
            "title": "Method to use for aggregation",
            "type": "string",
            "enum": [
              "max",
              "min",
              "count"
            ]
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Attribute"
      ]
    },
    {
      "name": "AttributeBulkArrayJoiner",
      "type": "processor",
      "description": "Flattens features by attributes",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AttributeBulkArrayJoinerParam",
        "type": "object",
        "properties": {
          "ignoreAttributes": {
            "title": "Attributes to ignore",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/Attribute"
            }
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Attribute"
      ]
    },
    {
      "name": "AttributeConversionTable",
      "type": "processor",
      "description": "Converts attributes from conversion table",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AttributeConversionTableParam",
        "type": "object",
        "required": [
          "format",
          "rules"
        ],
        "properties": {
          "dataset": {
            "title": "Dataset URI",
            "anyOf": [
              {
                "$ref": "#/definitions/Expr"
              },
              {
                "type": "null"
              }
            ]
          },
          "format": {
            "title": "Format of conversion table",
            "allOf": [
              {
                "$ref": "#/definitions/ConversionTableFormat"
              }
            ]
          },
          "inline": {
            "title": "Inline conversion table",
            "type": [
              "string",
              "null"
            ]
          },
          "rules": {
            "title": "Rules to convert attributes",
            "type": "array",
            "items": {
              "$ref": "#/definitions/AttributeConversionTableRule"
            }
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          },
          "AttributeConversionTableRule": {
            "type": "object",
            "required": [
              "conversionTableKeys",
              "conversionTableTo",
              "featureFroms",
              "featureTo"
            ],
            "properties": {
              "conversionTableKeys": {
                "title": "Keys to match in conversion table",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "conversionTableTo": {
                "title": "Attribute to convert to",
                "type": "string"
              },
              "featureFroms": {
                "title": "Attributes to convert from",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Attribute"
                }
              },
              "featureTo": {
                "title": "Attribute to convert to",
                "allOf": [
                  {
                    "$ref": "#/definitions/Attribute"
                  }
                ]
              }
            }
          },
          "ConversionTableFormat": {
            "type": "string",
            "enum": [
              "csv",
              "tsv",
              "json"
            ]
          },
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Attribute"
      ]
    },
    {
      "name": "AttributeDuplicateFilter",
      "type": "processor",
      "description": "Filtre les entités possédant des attributs dupliqués",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AttributeDuplicateFilterParam",
        "type": "object",
        "required": [
          "filterBy"
        ],
        "properties": {
          "filterBy": {
            "title": "Attributes to filter by",
            "type": "array",
            "items": {
              "$ref": "#/definitions/Attribute"
            }
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Attribute"
      ]
    },
    {
      "name": "AttributeFilePathInfoExtractor",
      "type": "processor",
      "description": "Extrait des informations de chemins de fichier à partir des attributs",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AttributeFilePathInfoExtractor",
        "type": "object",
        "required": [
          "attribute"
        ],
        "properties": {
          "attribute": {
            "title": "Attribute to extract file path from",
            "allOf": [
              {
                "$ref": "#/definitions/Attribute"
              }
            ]
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "rejected"
      ],
      "categories": [
        "Attribute"
      ]
    },
    {
      "name": "AttributeFlattener",
      "type": "processor",
      "description": "Flattens features by attributes",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AttributeFlattenerParam",
        "type": "object",
        "required": [
          "attributes"
        ],
        "properties": {
          "attributes": {
            "title": "Attributes to flatten",
            "type": "array",
            "items": {
              "$ref": "#/definitions/Attribute"
            }
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Attribute"
      ]
    },
    {
      "name": "AttributeManager",
      "type": "processor",
      "description": "Gère les attributs",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AttributeManagerParam",
        "type": "object",
        "required": [
          "operations"
        ],
        "properties": {
          "operations": {
            "title": "Operations to perform",
            "type": "array",
            "items": {
              "$ref": "#/definitions/Operation"
            }
          }
        },
        "definitions": {
          "Expr": {
            "type": "string"
          },
          "Method": {
            "type": "string",
            "enum": [
              "convert",
              "create",
              "rename",
              "remove"
            ]
          },
          "Operation": {
            "type": "object",
            "required": [
              "attribute",
              "method"
            ],
            "properties": {
              "attribute": {
                "title": "Attribute name",
                "type": "string"
              },
              "method": {
                "title": "Operation to perform",
                "allOf": [
                  {
                    "$ref": "#/definitions/Method"
                  }
                ]
              },
              "value": {
                "title": "Value to use for the operation",
                "anyOf": [
                  {
                    "$ref": "#/definitions/Expr"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Attribute"
      ]
    },
    {
      "name": "AttributeMapper",
      "type": "processor",
      "description": "Assigne des attributs",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AttributeMapperParam",
        "type": "object",
        "required": [
          "mappers"
        ],
        "properties": {
          "mappers": {
            "title": "Mappers",
            "type": "array",
            "items": {
              "$ref": "#/definitions/Mapper"
            }
          }
        },
        "definitions": {
          "Expr": {
            "type": "string"
          },
          "Mapper": {
            "type": "object",
            "properties": {
              "attribute": {
                "title": "Attribute name",
                "type": [
                  "string",
                  "null"
                ]
              },
              "childAttribute": {
                "title": "Child attribute name",
                "type": [
                  "string",
                  "null"
                ]
              },
              "expr": {
                "title": "Expression to evaluate",
                "anyOf": [
                  {
                    "$ref": "#/definitions/Expr"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "multipleExpr": {
                "title": "Expression to evaluate multiple attributes",
                "anyOf": [
                  {
                    "$ref": "#/definitions/Expr"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "parentAttribute": {
                "title": "Parent attribute name",
                "type": [
                  "string",
                  "null"
                ]
              },
              "valueAttribute": {
                "title": "Attribute name to get value from",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Attribute"
      ]
    },
    {
      "name": "BoundsExtractor",
      "type": "processor",
      "description": "Extrait les limites",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "rejected"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "Bufferer",
      "type": "processor",
      "description": "Crée un tampon autour d'une géométrie",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Bufferer",
        "type": "object",
        "required": [
          "bufferType",
          "distance",
          "interpolationAngle"
        ],
        "properties": {
          "bufferType": {
            "title": "Buffer type",
            "allOf": [
              {
                "$ref": "#/definitions/BufferType"
              }
            ]
          },
          "distance": {
            "title": "Buffer distance",
            "type": "number",
            "format": "double"
          },
          "interpolationAngle": {
            "title": "Buffer interpolation angle",
            "type": "number",
            "format": "double"
          }
        },
        "definitions": {
          "BufferType": {
            "type": "string",
            "enum": [
              "area2d"
            ]
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "rejected"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "BulkAttributeRenamer",
      "type": "processor",
      "description": "Renomme des attributs en ajoutant/supprimant des préfixes ou suffixes, ou en remplaçant du texte",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "BulkAttributeRenamerParam",
        "type": "object",
        "required": [
          "renameAction",
          "renameType",
          "renameValue"
        ],
        "properties": {
          "renameAction": {
            "title": "Action to perform on the attribute",
            "allOf": [
              {
                "$ref": "#/definitions/RenameAction"
              }
            ]
          },
          "renameType": {
            "title": "Type of attributes to rename",
            "allOf": [
              {
                "$ref": "#/definitions/RenameType"
              }
            ]
          },
          "renameValue": {
            "title": "Value to add or remove",
            "type": "string"
          },
          "selectedAttributes": {
            "title": "Attributes to rename",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "textToFind": {
            "title": "Regular expression pattern to match",
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "RenameAction": {
            "type": "string",
            "enum": [
              "AddPrefix",
              "AddSuffix",
              "RemovePrefix",
              "RemoveSuffix",
              "StringReplace"
            ]
          },
          "RenameType": {
            "type": "string",
            "enum": [
              "All",
              "Selected"
            ]
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Attribute"
      ]
    },
    {
      "name": "CenterPointReplacer",
      "type": "processor",
      "description": "Remplace la géométrie de l'entité par un point situé au centre de sa boîte englobante, à son centre de masse, ou à l'intérieur de son aire.",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "point",
        "rejected"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "Cesium3DTilesWriter",
      "type": "sink",
      "description": "Écrit les entités dans un fichier",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Cesium3DTilesWriterParam",
        "type": "object",
        "required": [
          "maxZoom",
          "minZoom",
          "output"
        ],
        "properties": {
          "attachTexture": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "compressOutput": {
            "anyOf": [
              {
                "$ref": "#/definitions/Expr"
              },
              {
                "type": "null"
              }
            ]
          },
          "maxZoom": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          },
          "minZoom": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          },
          "output": {
            "$ref": "#/definitions/Expr"
          }
        },
        "definitions": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default",
        "schema"
      ],
      "outputPorts": [],
      "categories": [
        "File"
      ]
    },
    {
      "name": "Clipper",
      "type": "processor",
      "description": "Divise les entités candidates à l'aide d'entités de découpage, de sorte que les parties intérieures ou extérieures soient produites séparément",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "clipper",
        "candidate"
      ],
      "outputPorts": [
        "inside",
        "outside",
        "rejected"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "ClosedCurveFilter",
      "type": "processor",
      "description": "Vérifie si les courbes forment des boucles fermées",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "closed",
        "open",
        "rejected"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "ConvexHullAccumulator",
      "type": "processor",
      "description": "Creates a convex hull based on a group of input features.",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "ConvexHullAccumulatorParam",
        "type": "object",
        "properties": {
          "groupBy": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/Attribute"
            }
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "rejected"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "CzmlWriter",
      "type": "sink",
      "description": "Writes features to a Czml file",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CzmlWriterParam",
        "type": "object",
        "required": [
          "output"
        ],
        "properties": {
          "groupBy": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/Attribute"
            }
          },
          "output": {
            "$ref": "#/definitions/Expr"
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          },
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [],
      "categories": [
        "File"
      ]
    },
    {
      "name": "DimensionFilter",
      "type": "processor",
      "description": "Filtre les entités en fonction de leur dimension",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "2d",
        "3d",
        "rejected"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "DirectoryDecompressor",
      "type": "processor",
      "description": "Decompresses a directory",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "DirectoryDecompressorParam",
        "type": "object",
        "required": [
          "archiveAttributes"
        ],
        "properties": {
          "archiveAttributes": {
            "title": "Attribute to extract file path from",
            "type": "array",
            "items": {
              "$ref": "#/definitions/Attribute"
            }
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "File"
      ]
    },
    {
      "name": "Dissolver",
      "type": "processor",
      "description": "Dissolves features grouped by specified attributes",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "DissolverParam",
        "type": "object",
        "properties": {
          "groupBy": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/Attribute"
            }
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "area",
        "rejected"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "EchoProcessor",
      "type": "processor",
      "description": "Répète les entités",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Debug"
      ]
    },
    {
      "name": "EchoSink",
      "type": "sink",
      "description": "Répète les entités",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [],
      "categories": [
        "Debug"
      ]
    },
    {
      "name": "ElevationExtractor",
      "type": "processor",
      "description": "Extrait la première valeur de la coordonnée z d'une entité et la stocke dans un attribut.",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "ElevationExtractorParam",
        "type": "object",
        "required": [
          "outputAttribute"
        ],
        "properties": {
          "outputAttribute": {
            "$ref": "#/definitions/Attribute"
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "Extruder",
      "type": "processor",
      "description": "Extrue un polygone sur une certaine distance",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "ExtruderParam",
        "type": "object",
        "required": [
          "distance"
        ],
        "properties": {
          "distance": {
            "$ref": "#/definitions/Expr"
          }
        },
        "definitions": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "FeatureCityGmlReader",
      "type": "processor",
      "description": "Reads features from citygml file",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "FeatureCityGmlReaderParam",
        "type": "object",
        "required": [
          "dataset"
        ],
        "properties": {
          "dataset": {
            "title": "Dataset to read",
            "allOf": [
              {
                "$ref": "#/definitions/Expr"
              }
            ]
          },
          "flatten": {
            "title": "Flatten the dataset",
            "type": [
              "boolean",
              "null"
            ]
          }
        },
        "definitions": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "FeatureCounter",
      "type": "processor",
      "description": "Compte les entités",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "FeatureCounterParam",
        "type": "object",
        "required": [
          "countStart",
          "outputAttribute"
        ],
        "properties": {
          "countStart": {
            "title": "Start count",
            "type": "integer",
            "format": "int64"
          },
          "groupBy": {
            "title": "Attributes to group by",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/Attribute"
            }
          },
          "outputAttribute": {
            "title": "Attribute to output the count",
            "type": "string"
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "rejected"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "FeatureCreator",
      "type": "source",
      "description": "Crée des entités à partir d'expressions",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "FeatureCreator",
        "type": "object",
        "required": [
          "creator"
        ],
        "properties": {
          "creator": {
            "$ref": "#/definitions/Expr"
          }
        },
        "definitions": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "FeatureDuplicateFilter",
      "type": "processor",
      "description": "Filters features by duplicate feature",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "FeatureFilePathExtractor",
      "type": "processor",
      "description": "Extracts features by file path",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "FeatureFilePathExtractorParam",
        "type": "object",
        "required": [
          "extractArchive",
          "sourceDataset"
        ],
        "properties": {
          "destPrefix": {
            "title": "Destination prefix",
            "type": [
              "string",
              "null"
            ]
          },
          "extractArchive": {
            "title": "Extract archive",
            "type": "boolean"
          },
          "sourceDataset": {
            "title": "Source dataset",
            "allOf": [
              {
                "$ref": "#/definitions/Expr"
              }
            ]
          }
        },
        "definitions": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "unfiltered"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "FeatureFilter",
      "type": "processor",
      "description": "Filtre les entités selon des conditions",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "FeatureFilterParam",
        "type": "object",
        "required": [
          "conditions"
        ],
        "properties": {
          "conditions": {
            "title": "Conditions to filter by",
            "type": "array",
            "items": {
              "$ref": "#/definitions/Condition"
            }
          }
        },
        "definitions": {
          "Condition": {
            "type": "object",
            "required": [
              "expr",
              "outputPort"
            ],
            "properties": {
              "expr": {
                "title": "Condition expression",
                "allOf": [
                  {
                    "$ref": "#/definitions/Expr"
                  }
                ]
              },
              "outputPort": {
                "title": "Output port",
                "allOf": [
                  {
                    "$ref": "#/definitions/Port"
                  }
                ]
              }
            }
          },
          "Expr": {
            "type": "string"
          },
          "Port": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "unfiltered"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "FeatureLodFilter",
      "type": "processor",
      "description": "Filter Geometry by lod",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "FeatureLodFilterParam",
        "type": "object",
        "required": [
          "filterKey"
        ],
        "properties": {
          "filterKey": {
            "title": "Attributes to filter by",
            "allOf": [
              {
                "$ref": "#/definitions/Attribute"
              }
            ]
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "up_to_lod1",
        "up_to_lod2",
        "up_to_lod3",
        "up_to_lod4",
        "unfiltered"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "FeatureMerger",
      "type": "processor",
      "description": "Fusionne des entités selon leurs attributs",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "FeatureMergerParam",
        "type": "object",
        "properties": {
          "completeGrouped": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "requestorAttribute": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/Attribute"
            }
          },
          "requestorAttributeValue": {
            "anyOf": [
              {
                "$ref": "#/definitions/Expr"
              },
              {
                "type": "null"
              }
            ]
          },
          "supplierAttribute": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/Attribute"
            }
          },
          "supplierAttributeValue": {
            "anyOf": [
              {
                "$ref": "#/definitions/Expr"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          },
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "requestor",
        "supplier"
      ],
      "outputPorts": [
        "merged",
        "unmerged"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "FeatureReader",
      "type": "processor",
      "description": "Filtre les entités selon des conditions",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "FeatureReaderParam",
        "oneOf": [
          {
            "type": "object",
            "required": [
              "dataset",
              "format"
            ],
            "properties": {
              "dataset": {
                "title": "Dataset",
                "allOf": [
                  {
                    "$ref": "#/definitions/Expr"
                  }
                ]
              },
              "format": {
                "type": "string",
                "enum": [
                  "csv"
                ]
              },
              "offset": {
                "description": "The offset of the first row to read",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint",
                "minimum": 0.0
              }
            }
          },
          {
            "type": "object",
            "required": [
              "dataset",
              "format"
            ],
            "properties": {
              "dataset": {
                "title": "Dataset",
                "allOf": [
                  {
                    "$ref": "#/definitions/Expr"
                  }
                ]
              },
              "format": {
                "type": "string",
                "enum": [
                  "tsv"
                ]
              },
              "offset": {
                "description": "The offset of the first row to read",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint",
                "minimum": 0.0
              }
            }
          },
          {
            "type": "object",
            "required": [
              "dataset",
              "format"
            ],
            "properties": {
              "dataset": {
                "title": "Dataset",
                "allOf": [
                  {
                    "$ref": "#/definitions/Expr"
                  }
                ]
              },
              "format": {
                "type": "string",
                "enum": [
                  "json"
                ]
              }
            }
          }
        ],
        "definitions": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "FeatureSorter",
      "type": "processor",
      "description": "Trie les entités par attributs",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "FeatureSorterParam",
        "type": "object",
        "required": [
          "attributes",
          "order"
        ],
        "properties": {
          "attributes": {
            "title": "Attributes to sort by",
            "type": "array",
            "items": {
              "$ref": "#/definitions/Attribute"
            }
          },
          "order": {
            "title": "Order to sort by",
            "allOf": [
              {
                "$ref": "#/definitions/Order"
              }
            ]
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          },
          "Order": {
            "type": "string",
            "enum": [
              "ascending",
              "descending"
            ]
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "FeatureTransformer",
      "type": "processor",
      "description": "Transforme les entités à l'aide d'expressions",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "FeatureTransformerParam",
        "type": "object",
        "required": [
          "transformers"
        ],
        "properties": {
          "transformers": {
            "title": "Transformers to apply",
            "type": "array",
            "items": {
              "$ref": "#/definitions/Transform"
            }
          }
        },
        "definitions": {
          "Expr": {
            "type": "string"
          },
          "Transform": {
            "type": "object",
            "required": [
              "expr"
            ],
            "properties": {
              "expr": {
                "title": "Expression to transform the feature",
                "allOf": [
                  {
                    "$ref": "#/definitions/Expr"
                  }
                ]
              }
            }
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "FeatureTypeFilter",
      "type": "processor",
      "description": "Filtre les entités par type",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "FeatureTypeFilter",
        "type": "object",
        "required": [
          "targetTypes"
        ],
        "properties": {
          "targetTypes": {
            "description": "Target feature types",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "unfiltered"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "FeatureWriter",
      "type": "processor",
      "description": "Writes features from various formats",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "FeatureWriterParam",
        "oneOf": [
          {
            "type": "object",
            "required": [
              "format",
              "output"
            ],
            "properties": {
              "format": {
                "type": "string",
                "enum": [
                  "csv"
                ]
              },
              "output": {
                "title": "Output path",
                "allOf": [
                  {
                    "$ref": "#/definitions/Expr"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "format",
              "output"
            ],
            "properties": {
              "format": {
                "type": "string",
                "enum": [
                  "tsv"
                ]
              },
              "output": {
                "title": "Output path",
                "allOf": [
                  {
                    "$ref": "#/definitions/Expr"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "format",
              "output"
            ],
            "properties": {
              "converter": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Expr"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "format": {
                "type": "string",
                "enum": [
                  "json"
                ]
              },
              "output": {
                "title": "Output path",
                "allOf": [
                  {
                    "$ref": "#/definitions/Expr"
                  }
                ]
              }
            }
          }
        ],
        "definitions": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "FilePathExtractor",
      "type": "source",
      "description": "Extrait des fichiers d'un répertoire ou d'une archive",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "FilePathExtractor",
        "type": "object",
        "required": [
          "extractArchive",
          "sourceDataset"
        ],
        "properties": {
          "extractArchive": {
            "type": "boolean"
          },
          "sourceDataset": {
            "$ref": "#/definitions/Expr"
          }
        },
        "definitions": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "File"
      ]
    },
    {
      "name": "FilePropertyExtractor",
      "type": "processor",
      "description": "Extrait les propriétés d'un fichier",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "FilePropertyExtractor",
        "type": "object",
        "required": [
          "filePathAttribute"
        ],
        "properties": {
          "filePathAttribute": {
            "title": "Attribute to extract file path from",
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "rejected"
      ],
      "categories": [
        "File"
      ]
    },
    {
      "name": "FileReader",
      "type": "source",
      "description": "Lit des entités depuis un fichier",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "FileReader",
        "oneOf": [
          {
            "title": "CSV",
            "type": "object",
            "required": [
              "format"
            ],
            "properties": {
              "dataset": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Expr"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "format": {
                "type": "string",
                "enum": [
                  "csv"
                ]
              },
              "inline": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Expr"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "offset": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint",
                "minimum": 0.0
              }
            }
          },
          {
            "title": "TSV",
            "type": "object",
            "required": [
              "format"
            ],
            "properties": {
              "dataset": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Expr"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "format": {
                "type": "string",
                "enum": [
                  "tsv"
                ]
              },
              "inline": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Expr"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "offset": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint",
                "minimum": 0.0
              }
            }
          },
          {
            "title": "JSON",
            "type": "object",
            "required": [
              "format"
            ],
            "properties": {
              "dataset": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Expr"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "format": {
                "type": "string",
                "enum": [
                  "json"
                ]
              },
              "inline": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Expr"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          },
          {
            "title": "CityGML",
            "type": "object",
            "required": [
              "format"
            ],
            "properties": {
              "dataset": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Expr"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "flatten": {
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "format": {
                "type": "string",
                "enum": [
                  "citygml"
                ]
              },
              "inline": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Expr"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          },
          {
            "title": "GeoJSON",
            "type": "object",
            "required": [
              "format"
            ],
            "properties": {
              "dataset": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Expr"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "format": {
                "type": "string",
                "enum": [
                  "geojson"
                ]
              },
              "inline": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Expr"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          }
        ],
        "definitions": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "File"
      ]
    },
    {
      "name": "FileWriter",
      "type": "sink",
      "description": "Écrit des entités dans un fichier",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "FileWriterParam",
        "oneOf": [
          {
            "type": "object",
            "required": [
              "format",
              "output"
            ],
            "properties": {
              "format": {
                "type": "string",
                "enum": [
                  "csv"
                ]
              },
              "output": {
                "$ref": "#/definitions/Expr"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "format",
              "output"
            ],
            "properties": {
              "format": {
                "type": "string",
                "enum": [
                  "tsv"
                ]
              },
              "output": {
                "$ref": "#/definitions/Expr"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "format",
              "output"
            ],
            "properties": {
              "format": {
                "type": "string",
                "enum": [
                  "xml"
                ]
              },
              "output": {
                "$ref": "#/definitions/Expr"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "format",
              "output"
            ],
            "properties": {
              "converter": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Expr"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "format": {
                "type": "string",
                "enum": [
                  "json"
                ]
              },
              "output": {
                "$ref": "#/definitions/Expr"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "format",
              "output"
            ],
            "properties": {
              "format": {
                "type": "string",
                "enum": [
                  "excel"
                ]
              },
              "output": {
                "$ref": "#/definitions/Expr"
              },
              "sheetName": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        ],
        "definitions": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [],
      "categories": [
        "File"
      ]
    },
    {
      "name": "GeoJsonWriter",
      "type": "sink",
      "description": "Écrit des entités dans un fichier GeoJSON",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "GeoJsonWriterParam",
        "type": "object",
        "required": [
          "output"
        ],
        "properties": {
          "groupBy": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/Attribute"
            }
          },
          "output": {
            "$ref": "#/definitions/Expr"
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          },
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [],
      "categories": [
        "File"
      ]
    },
    {
      "name": "GeometryCoercer",
      "type": "processor",
      "description": "Force la géométrie d'une entité à une géométrie spécifique",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "GeometryCoercer",
        "type": "object",
        "required": [
          "coercerType"
        ],
        "properties": {
          "coercerType": {
            "description": "The type of geometry to coerce to",
            "allOf": [
              {
                "$ref": "#/definitions/CoercerType"
              }
            ]
          }
        },
        "definitions": {
          "CoercerType": {
            "type": "string",
            "enum": [
              "lineString"
            ]
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "GeometryExtractor",
      "type": "processor",
      "description": "Extrait la géométrie d'une entité et l'ajoute comme attribut.",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "GeometryExtractor",
        "type": "object",
        "required": [
          "outputAttribute"
        ],
        "properties": {
          "outputAttribute": {
            "$ref": "#/definitions/Attribute"
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "GeometryFilter",
      "type": "processor",
      "description": "Filtre la géométrie par type",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "GeometryFilterParam",
        "oneOf": [
          {
            "type": "object",
            "required": [
              "filterType"
            ],
            "properties": {
              "filterType": {
                "type": "string",
                "enum": [
                  "none"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "filterType"
            ],
            "properties": {
              "filterType": {
                "type": "string",
                "enum": [
                  "multiple"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "filterType"
            ],
            "properties": {
              "filterType": {
                "type": "string",
                "enum": [
                  "geometryType"
                ]
              }
            }
          }
        ]
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "unfiltered",
        "none",
        "contains",
        "point",
        "line",
        "lineString",
        "polygon",
        "multiPoint",
        "multiLineString",
        "multiPolygon",
        "rect",
        "triangle",
        "solid",
        "geometryCollection",
        "solid",
        "multiSurface",
        "compositeSurface",
        "surface",
        "triangle",
        "multiCurve",
        "curve",
        "multiPoint",
        "point",
        "tin"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "GeometryReplacer",
      "type": "processor",
      "description": "Remplace la géométrie d'une entité par une nouvelle géométrie.",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "GeometryReplacer",
        "type": "object",
        "required": [
          "sourceAttribute"
        ],
        "properties": {
          "sourceAttribute": {
            "$ref": "#/definitions/Attribute"
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "GeometrySplitter",
      "type": "processor",
      "description": "Divise la géométrie par type",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "GeometryValidator",
      "type": "processor",
      "description": "Valide la géométrie d'une entité",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "GeometryValidator",
        "type": "object",
        "required": [
          "validationTypes"
        ],
        "properties": {
          "validationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ValidationType"
            }
          }
        },
        "definitions": {
          "ValidationType": {
            "type": "string",
            "enum": [
              "duplicatePoints",
              "corruptGeometry",
              "selfIntersection"
            ]
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "success",
        "failed",
        "rejected"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "GeometryValueFilter",
      "type": "processor",
      "description": "Filtre la géométrie par valeur",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "none",
        "geometry2d",
        "geometry3d",
        "cityGml"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "GltfWriter",
      "type": "sink",
      "description": "Écrit des entités dans un fichier Gltf",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "GltfWriterParam",
        "type": "object",
        "required": [
          "output"
        ],
        "properties": {
          "attachTexture": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "output": {
            "$ref": "#/definitions/Expr"
          }
        },
        "definitions": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [],
      "categories": [
        "File"
      ]
    },
    {
      "name": "HoleCounter",
      "type": "processor",
      "description": "Compte le nombre de trous dans une géométrie et l'ajoute comme attribut.",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "HoleCounterParam",
        "type": "object",
        "required": [
          "outputAttribute"
        ],
        "properties": {
          "outputAttribute": {
            "$ref": "#/definitions/Attribute"
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "HoleExtractor",
      "type": "processor",
      "description": "Extrait les trous dans une géométrie et les ajoute comme attribut.",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "outershell",
        "hole",
        "rejected"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "HorizontalReprojector",
      "type": "processor",
      "description": "Reprojette la géométrie d'une entité dans un système de coordonnées spécifié",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "HorizontalReprojectorParam",
        "type": "object",
        "required": [
          "epsgCode"
        ],
        "properties": {
          "epsgCode": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0.0
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "InputRouter",
      "type": "processor",
      "description": "Action pour le renvoi du premier port dans les sous-flux de travail.",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "InputRouter",
        "type": "object",
        "required": [
          "routingPort"
        ],
        "properties": {
          "routingPort": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "System"
      ]
    },
    {
      "name": "LineOnLineOverlayer",
      "type": "processor",
      "description": "Les points d'intersection deviennent des entités ponctuelles pouvant contenir la liste combinée des attributs des lignes d'origine intersectées.",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "LineOnLineOverlayerParam",
        "type": "object",
        "required": [
          "tolerance"
        ],
        "properties": {
          "groupBy": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/Attribute"
            }
          },
          "tolerance": {
            "type": "number",
            "format": "double"
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "point",
        "line",
        "rejected"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "ListExploder",
      "type": "processor",
      "description": "Explose les attributs de type liste en plusieurs éléments",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "ListExploder",
        "type": "object",
        "required": [
          "sourceAttribute"
        ],
        "properties": {
          "sourceAttribute": {
            "description": "The attribute to explode",
            "allOf": [
              {
                "$ref": "#/definitions/Attribute"
              }
            ]
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "MVTWriter",
      "type": "sink",
      "description": "Écrit des entités dans un fichier",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "MVTWriterParam",
        "type": "object",
        "required": [
          "layerName",
          "maxZoom",
          "minZoom",
          "output"
        ],
        "properties": {
          "compressOutput": {
            "anyOf": [
              {
                "$ref": "#/definitions/Expr"
              },
              {
                "type": "null"
              }
            ]
          },
          "layerName": {
            "$ref": "#/definitions/Expr"
          },
          "maxZoom": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          },
          "minZoom": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          },
          "output": {
            "$ref": "#/definitions/Expr"
          }
        },
        "definitions": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [],
      "categories": [
        "File"
      ]
    },
    {
      "name": "NoopProcessor",
      "type": "processor",
      "description": "N'effectue aucune opération sur les entités",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Noop"
      ]
    },
    {
      "name": "NoopSink",
      "type": "sink",
      "description": "N'effectue aucune opération finale",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [],
      "categories": [
        "Noop"
      ]
    },
    {
      "name": "Offsetter",
      "type": "processor",
      "description": "Ajoute des décalages aux coordonnées de l'entité.",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "OffsetterParam",
        "type": "object",
        "properties": {
          "offsetX": {
            "type": [
              "number",
              "null"
            ],
            "format": "double"
          },
          "offsetY": {
            "type": [
              "number",
              "null"
            ],
            "format": "double"
          },
          "offsetZ": {
            "type": [
              "number",
              "null"
            ],
            "format": "double"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "OrientationExtractor",
      "type": "processor",
      "description": "Extrait l'orientation de la géométrie d'une entité et l'ajoute comme attribut.",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "OrientationExtractorParam",
        "type": "object",
        "required": [
          "outputAttribute"
        ],
        "properties": {
          "outputAttribute": {
            "$ref": "#/definitions/Attribute"
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "OutputRouter",
      "type": "processor",
      "description": "Action pour le renvoi du dernier port dans les sous-flux de travail.",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "OutputRouter",
        "type": "object",
        "required": [
          "routingPort"
        ],
        "properties": {
          "routingPort": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [],
      "categories": [
        "System"
      ]
    },
    {
      "name": "PLATEAU3.AttributeFlattener",
      "type": "processor",
      "description": "Aplati les attributs pour créer une entité de bâtiment",
      "parameter": null,
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU3.BuildingInstallationGeometryTypeExtractor",
      "type": "processor",
      "description": "Extrait le type de géométrie de l'installation d'un bâtiment (BuildingInstallationGeometryType)",
      "parameter": null,
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU3.BuildingUsageAttributeValidator",
      "type": "processor",
      "description": "Ce processeur valide les attributs d'usage des bâtiments en vérifiant la présence d'attributs requis et la justesse des codes de ville. En cas de problème, il génère des erreurs via les ports lBldgError et codeError.",
      "parameter": null,
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "lBldgError",
        "codeError",
        "default"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU3.DictionariesInitiator",
      "type": "processor",
      "description": "Initialise des dictionnaires pour PLATEAU",
      "parameter": null,
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "rejected"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU3.DomainOfDefinitionValidator",
      "type": "processor",
      "description": "Valide le domaine de définition des entités CityGML",
      "parameter": null,
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "rejected"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU3.MaxLodExtractor",
      "type": "processor",
      "description": "Extrait maxLod",
      "parameter": null,
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU3.TranXLinkChecker",
      "type": "processor",
      "description": "Vérifie Xlink pour Tran",
      "parameter": null,
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU3.UDXFolderExtractor",
      "type": "processor",
      "description": "Extrait les dossiers UDX du chemin cityGML",
      "parameter": null,
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "rejected"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU3.UnmatchedXlinkDetector",
      "type": "processor",
      "description": "Détecte les xlinks non correspondants pour PLATEAU",
      "parameter": null,
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "summary",
        "unMatchedXlinkFrom",
        "unMatchedXlinkTo"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU3.XMLAttributeExtractor",
      "type": "processor",
      "description": "Extrait les attributs de fragments XML en fonction d'une définition de schéma",
      "parameter": null,
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "attributeFeature",
        "summary",
        "filePath"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU4.AttributeFlattener",
      "type": "processor",
      "description": "Flatten attributes for building feature",
      "parameter": null,
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "schema"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU4.CityCodeExtractor",
      "type": "processor",
      "description": "Extracts Codelist",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CityCodeExtractorParam",
        "type": "object",
        "required": [
          "cityCodeAttribute",
          "codelistsPathAttribute"
        ],
        "properties": {
          "cityCodeAttribute": {
            "$ref": "#/definitions/Attribute"
          },
          "codelistsPathAttribute": {
            "$ref": "#/definitions/Attribute"
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU4.DomainOfDefinitionValidator",
      "type": "processor",
      "description": "Validates domain of definition of CityGML features",
      "parameter": null,
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "rejected"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU4.MaxLodExtractor",
      "type": "processor",
      "description": "Extracts maxLod",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "MaxLodExtractorParam",
        "type": "object",
        "required": [
          "cityGmlPathAttribute",
          "maxLodAttribute"
        ],
        "properties": {
          "cityGmlPathAttribute": {
            "$ref": "#/definitions/Attribute"
          },
          "maxLodAttribute": {
            "$ref": "#/definitions/Attribute"
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU4.MissingAttributeDetector",
      "type": "processor",
      "description": "Detect missing attributes",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "MissingAttributeDetectorParam",
        "type": "object",
        "required": [
          "packageAttribute"
        ],
        "properties": {
          "packageAttribute": {
            "$ref": "#/definitions/Attribute"
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "summary",
        "required",
        "target"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU4.ObjectListExtractor",
      "type": "processor",
      "description": "Extract object list",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "ObjectListExtractorParam",
        "type": "object",
        "required": [
          "objectListPathAttribute"
        ],
        "properties": {
          "objectListPathAttribute": {
            "$ref": "#/definitions/Attribute"
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PLATEAU4.UDXFolderExtractor",
      "type": "processor",
      "description": "Extracts UDX folders from cityGML path",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "UDXFolderExtractorParam",
        "type": "object",
        "required": [
          "cityGmlPath"
        ],
        "properties": {
          "cityGmlPath": {
            "$ref": "#/definitions/Expr"
          },
          "codelistsPath": {
            "anyOf": [
              {
                "$ref": "#/definitions/Attribute"
              },
              {
                "type": "null"
              }
            ]
          },
          "schemasPath": {
            "anyOf": [
              {
                "$ref": "#/definitions/Attribute"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          },
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "rejected"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "PlanarityFilter",
      "type": "processor",
      "description": "Filtre la géométrie par type",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "planarity",
        "notplanarity"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "Refiner",
      "type": "processor",
      "description": "Affine la géométrie",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "remain"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "RhaiCaller",
      "type": "processor",
      "description": "Appelle un script Rhai",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "RhaiCallerParam",
        "type": "object",
        "required": [
          "isTarget",
          "process"
        ],
        "properties": {
          "isTarget": {
            "title": "Rhai script to determine if the feature is the target",
            "allOf": [
              {
                "$ref": "#/definitions/Expr"
              }
            ]
          },
          "process": {
            "title": "Rhai script to process the feature",
            "allOf": [
              {
                "$ref": "#/definitions/Expr"
              }
            ]
          }
        },
        "definitions": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "ShapefileWriter",
      "type": "sink",
      "description": "Writes features to a Shapefile",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "ShapefileWriterParam",
        "type": "object",
        "required": [
          "output"
        ],
        "properties": {
          "groupBy": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/Attribute"
            }
          },
          "output": {
            "$ref": "#/definitions/Expr"
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          },
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [],
      "categories": [
        "File"
      ]
    },
    {
      "name": "SqlReader",
      "type": "source",
      "description": "Reads features from SQL",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SqlReaderParam",
        "type": "object",
        "required": [
          "databaseUrl",
          "sql"
        ],
        "properties": {
          "databaseUrl": {
            "description": "Database URL (e.g. `sqlite:///tests/sqlite/sqlite.db`, `mysql://user:password@localhost:3306/db`, `postgresql://user:password@localhost:5432/db`)",
            "allOf": [
              {
                "$ref": "#/definitions/Expr"
              }
            ]
          },
          "sql": {
            "$ref": "#/definitions/Expr"
          }
        },
        "definitions": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Feature"
      ]
    },
    {
      "name": "StatisticsCalculator",
      "type": "processor",
      "description": "Calcule des statistiques sur les entités",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "StatisticsCalculatorParam",
        "type": "object",
        "required": [
          "calculations"
        ],
        "properties": {
          "aggregateAttribute": {
            "title": "Attribute to aggregate by",
            "anyOf": [
              {
                "$ref": "#/definitions/Attribute"
              },
              {
                "type": "null"
              }
            ]
          },
          "aggregateName": {
            "title": "Name of the attribute to aggregate by",
            "anyOf": [
              {
                "$ref": "#/definitions/Attribute"
              },
              {
                "type": "null"
              }
            ]
          },
          "calculations": {
            "title": "Calculations to perform",
            "type": "array",
            "items": {
              "$ref": "#/definitions/Calculation"
            }
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          },
          "Calculation": {
            "type": "object",
            "required": [
              "expr",
              "newAttribute"
            ],
            "properties": {
              "expr": {
                "title": "Calculation to perform",
                "allOf": [
                  {
                    "$ref": "#/definitions/Expr"
                  }
                ]
              },
              "newAttribute": {
                "title": "New attribute name",
                "allOf": [
                  {
                    "$ref": "#/definitions/Attribute"
                  }
                ]
              }
            }
          },
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "complete"
      ],
      "categories": [
        "Attribute"
      ]
    },
    {
      "name": "SurfaceFootprintReplacer",
      "type": "processor",
      "description": "Replace the geometry with its footprint",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SurfaceFootprintReplacerParam",
        "type": "object",
        "properties": {
          "elevation": {
            "type": [
              "number",
              "null"
            ],
            "format": "double"
          },
          "lightDirection": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "number",
              "format": "double"
            },
            "maxItems": 3,
            "minItems": 3
          },
          "shadowMode": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "footprint",
        "rejected"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "ThreeDimensionBoxReplacer",
      "type": "processor",
      "description": "Remplace un boîtier tridimensionnel par un polygone.",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "ThreeDimensionBoxReplacer",
        "type": "object",
        "required": [
          "maxX",
          "maxY",
          "maxZ",
          "minX",
          "minY",
          "minZ"
        ],
        "properties": {
          "maxX": {
            "$ref": "#/definitions/Attribute"
          },
          "maxY": {
            "$ref": "#/definitions/Attribute"
          },
          "maxZ": {
            "$ref": "#/definitions/Attribute"
          },
          "minX": {
            "$ref": "#/definitions/Attribute"
          },
          "minY": {
            "$ref": "#/definitions/Attribute"
          },
          "minZ": {
            "$ref": "#/definitions/Attribute"
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "ThreeDimensionRotator",
      "type": "processor",
      "description": "Remplace un boîtier tridimensionnel par un polygone.",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "ThreeDimensionRotatorParam",
        "type": "object",
        "required": [
          "angleDegree",
          "directionX",
          "directionY",
          "directionZ",
          "originX",
          "originY",
          "originZ"
        ],
        "properties": {
          "angleDegree": {
            "$ref": "#/definitions/Expr"
          },
          "directionX": {
            "$ref": "#/definitions/Expr"
          },
          "directionY": {
            "$ref": "#/definitions/Expr"
          },
          "directionZ": {
            "$ref": "#/definitions/Expr"
          },
          "originX": {
            "$ref": "#/definitions/Expr"
          },
          "originY": {
            "$ref": "#/definitions/Expr"
          },
          "originZ": {
            "$ref": "#/definitions/Expr"
          }
        },
        "definitions": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "TwoDimensionForcer",
      "type": "processor",
      "description": "Force une géométrie à être bidimensionnelle.",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "VertexRemover",
      "type": "processor",
      "description": "Supprime des sommets spécifiques de la géométrie d'une entité",
      "parameter": null,
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default",
        "rejected"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "VerticalReprojector",
      "type": "processor",
      "description": "Reprojette la géométrie d'une entité dans un système de coordonnées spécifié",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "VerticalReprojectorParam",
        "type": "object",
        "required": [
          "reprojectorType"
        ],
        "properties": {
          "reprojectorType": {
            "$ref": "#/definitions/VerticalReprojectorType"
          }
        },
        "definitions": {
          "VerticalReprojectorType": {
            "type": "string",
            "enum": [
              "jgd2011ToWgs84"
            ]
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Geometry"
      ]
    },
    {
      "name": "WasmRuntimeExecutor",
      "type": "processor",
      "description": "Compile des scripts en .wasm et les exécute dans un environnement d'exécution wasm",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "WasmRuntimeExecutorParam",
        "type": "object",
        "required": [
          "processorType",
          "programmingLanguage",
          "sourceCodeFilePath"
        ],
        "properties": {
          "processorType": {
            "$ref": "#/definitions/ProcessorType"
          },
          "programmingLanguage": {
            "$ref": "#/definitions/ProgrammingLanguage"
          },
          "sourceCodeFilePath": {
            "$ref": "#/definitions/Expr"
          }
        },
        "definitions": {
          "Expr": {
            "type": "string"
          },
          "ProcessorType": {
            "type": "string",
            "enum": [
              "Attribute"
            ]
          },
          "ProgrammingLanguage": {
            "type": "string",
            "enum": [
              "Python"
            ]
          }
        }
      },
      "builtin": false,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "Wasm"
      ]
    },
    {
      "name": "XMLFragmenter",
      "type": "processor",
      "description": "Fragmente du XML",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "XmlFragmenterParam",
        "oneOf": [
          {
            "type": "object",
            "required": [
              "attribute",
              "elementsToExclude",
              "elementsToMatch",
              "source"
            ],
            "properties": {
              "attribute": {
                "$ref": "#/definitions/Attribute"
              },
              "elementsToExclude": {
                "$ref": "#/definitions/Expr"
              },
              "elementsToMatch": {
                "$ref": "#/definitions/Expr"
              },
              "source": {
                "type": "string",
                "enum": [
                  "url"
                ]
              }
            }
          }
        ],
        "definitions": {
          "Attribute": {
            "type": "string"
          },
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "default"
      ],
      "categories": [
        "XML"
      ]
    },
    {
      "name": "XMLValidator",
      "type": "processor",
      "description": "Valide le contenu XML",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "XmlValidatorParam",
        "type": "object",
        "required": [
          "attribute",
          "inputType",
          "validationType"
        ],
        "properties": {
          "attribute": {
            "$ref": "#/definitions/Attribute"
          },
          "inputType": {
            "$ref": "#/definitions/XmlInputType"
          },
          "validationType": {
            "$ref": "#/definitions/ValidationType"
          }
        },
        "definitions": {
          "Attribute": {
            "type": "string"
          },
          "ValidationType": {
            "type": "string",
            "enum": [
              "syntax",
              "syntaxAndNamespace",
              "syntaxAndSchema"
            ]
          },
          "XmlInputType": {
            "type": "string",
            "enum": [
              "file",
              "text"
            ]
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [
        "success",
        "failed"
      ],
      "categories": [
        "PLATEAU"
      ]
    },
    {
      "name": "ZipFileWriter",
      "type": "sink",
      "description": "Writes features to a zip file",
      "parameter": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "ZipFileWriterParam",
        "type": "object",
        "required": [
          "output"
        ],
        "properties": {
          "output": {
            "description": "Output path",
            "allOf": [
              {
                "$ref": "#/definitions/Expr"
              }
            ]
          }
        },
        "definitions": {
          "Expr": {
            "type": "string"
          }
        }
      },
      "builtin": true,
      "inputPorts": [
        "default"
      ],
      "outputPorts": [],
      "categories": [
        "File"
      ]
    }
  ]
}
