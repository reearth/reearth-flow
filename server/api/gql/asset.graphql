type Asset implements Node {
  id: ID!
  workspaceId: ID!
  createdAt: DateTime!
  fileName: String!
  size: FileSize!
  contentType: String!
  name: String!
  url: String!
  uuid: String!
  previewType: PreviewType
  coreSupport: Boolean!
  flatFiles: Boolean!
  public: Boolean!
  archiveExtractionStatus: ArchiveExtractionStatus
  Workspace: Workspace
}

enum AssetSortType {
  DATE
  SIZE
  NAME
}

enum PreviewType {
  IMAGE
  IMAGE_SVG
  GEO
  GEO_3D_TILES
  GEO_MVT
  MODEL_3D
  CSV
  UNKNOWN
  UNKNOWN_GEO
  GEOJSON
  GEOTIFF
  GPX
  KML
  SHP
  CZML
  PDF
  HTML
  XML
  TEXT
  JSON
  SHEET
  ARCHIVE
  GLTF
  VIDEO
  AUDIO
  TMS
  GPKG
}

enum ArchiveExtractionStatus {
  SKIPPED
  PENDING
  IN_PROGRESS
  DONE
  FAILED
}

# InputType

input CreateAssetInput {
  workspaceId: ID!
  file: Upload!
}

input RemoveAssetInput {
  assetId: ID!
}

# Payload

type CreateAssetPayload {
  asset: Asset!
}

type RemoveAssetPayload {
  assetId: ID!
}

# Connection

type AssetConnection {
  nodes: [Asset]!
  pageInfo: PageInfo!
  totalCount: Int!
}

# Query and Mutation

extend type Query {
  assets(
    workspaceId: ID!
    keyword: String
    sort: AssetSortType
    pagination: PageBasedPagination!
  ): AssetConnection!
}

extend type Mutation {
  createAsset(input: CreateAssetInput!): CreateAssetPayload
  removeAsset(input: RemoveAssetInput!): RemoveAssetPayload
}
