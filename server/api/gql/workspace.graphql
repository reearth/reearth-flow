type Workspace implements Node {
  assets(pagination: Pagination): AssetConnection!
  id: ID!
  members: [WorkspaceMember!]!
  name: String!
  personal: Boolean!
  projects(
    includeArchived: Boolean
    pagination: Pagination
  ): ProjectConnection!
  workerConfig: WorkerConfig
}

type WorkspaceMember {
  role: Role!
  user: User
  userId: ID!
}

enum Role {
  # a role who can maintain a project
  MAINTAINER
  # a eole who can have full controll of project
  OWNER
  # a role who can read project
  READER
  # a role who can read and write project
  WRITER
}

# InputType

input CreateWorkspaceInput {
  name: String!
}

input UpdateWorkspaceInput {
  workspaceId: ID!
  name: String!
}

input AddMemberToWorkspaceInput {
  workspaceId: ID!
  userId: ID!
  role: Role!
}

input RemoveMemberFromWorkspaceInput {
  workspaceId: ID!
  userId: ID!
}

input UpdateMemberOfWorkspaceInput {
  workspaceId: ID!
  userId: ID!
  role: Role!
}

input DeleteWorkspaceInput {
  workspaceId: ID!
}

input UpdateWorkerConfigInput {
  workspaceId: ID!
  machineType: String
  computeCpuMilli: Int
  computeMemoryMib: Int
  bootDiskSizeGB: Int
  taskCount: Int
  maxConcurrency: Int
  threadPoolSize: Int
  channelBufferSize: Int
  featureFlushThreshold: Int
  nodeStatusPropagationDelayMilli: Int
}

input DeleteWorkerConfigInput {
  workspaceId: ID!
}

# Payload

type CreateWorkspacePayload {
  workspace: Workspace!
}

type UpdateWorkspacePayload {
  workspace: Workspace!
}

type AddMemberToWorkspacePayload {
  workspace: Workspace!
}

type RemoveMemberFromWorkspacePayload {
  workspace: Workspace!
}

type UpdateMemberOfWorkspacePayload {
  workspace: Workspace!
}

type DeleteWorkspacePayload {
  workspaceId: ID!
}

type WorkerConfig {
  workspace: ID!
  machineType: String
  computeCpuMilli: Int
  computeMemoryMib: Int
  bootDiskSizeGB: Int
  taskCount: Int
  maxConcurrency: Int
  threadPoolSize: Int
  channelBufferSize: Int
  featureFlushThreshold: Int
  nodeStatusPropagationDelayMilli: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type UpdateWorkerConfigPayload {
  config: WorkerConfig!
}

type DeleteWorkerConfigPayload {
  workspaceId: ID!
}

# Query and Mutation

extend type Mutation {
  createWorkspace(input: CreateWorkspaceInput!): CreateWorkspacePayload
  deleteWorkspace(input: DeleteWorkspaceInput!): DeleteWorkspacePayload
  updateWorkspace(input: UpdateWorkspaceInput!): UpdateWorkspacePayload
  addMemberToWorkspace(input: AddMemberToWorkspaceInput!): AddMemberToWorkspacePayload
  removeMemberFromWorkspace(input: RemoveMemberFromWorkspaceInput!): RemoveMemberFromWorkspacePayload
  updateMemberOfWorkspace(input: UpdateMemberOfWorkspaceInput!): UpdateMemberOfWorkspacePayload
  updateWorkerConfig(input: UpdateWorkerConfigInput!): UpdateWorkerConfigPayload
  deleteWorkerConfig(input: DeleteWorkerConfigInput!): DeleteWorkerConfigPayload
}
