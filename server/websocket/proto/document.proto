syntax = "proto3";

package document;

service DocumentService {
  // WebSocket-like streaming for document updates
  rpc SyncDocument (stream DocumentUpdate) returns (stream DocumentUpdate) {}
  
  // Get latest document state
  rpc GetLatestDocument (DocumentRequest) returns (DocumentResponse) {}
  
  // Get document history
  rpc GetDocumentHistory (DocumentHistoryRequest) returns (DocumentHistoryResponse) {}
  
  // Rollback document to a specific version
  rpc RollbackDocument (RollbackRequest) returns (RollbackResponse) {}
}

message DocumentUpdate {
  string doc_id = 1;
  bytes update_data = 2;
}

message DocumentRequest {
  string doc_id = 1;
}

message DocumentResponse {
  string doc_id = 1;
  bytes content = 2;
}

message DocumentHistoryRequest {
  string doc_id = 1;
}

message DocumentHistoryResponse {
  string doc_id = 1;
  repeated DocumentVersion versions = 2;
}

message DocumentVersion {
  string version_id = 1;
  string timestamp = 2;
  bytes content = 3;
}

message RollbackRequest {
  string doc_id = 1;
  string version_id = 2;
}

message RollbackResponse {
  bool success = 1;
  string message = 2;
} 