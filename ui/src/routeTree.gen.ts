/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const WorkspacesWorkspaceIdLazyImport = createFileRoute(
  '/workspaces/$workspaceId',
)()
const WorkspacesWorkspaceIdSettingsTabLazyImport = createFileRoute(
  '/workspaces/$workspaceId/settings/$tab',
)()
const WorkspacesWorkspaceIdRunsTabLazyImport = createFileRoute(
  '/workspaces/$workspaceId/runs/$tab',
)()
const WorkspacesWorkspaceIdProjectsProjectIdLazyImport = createFileRoute(
  '/workspaces/$workspaceId/projects/$projectId',
)()

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WorkspacesWorkspaceIdLazyRoute = WorkspacesWorkspaceIdLazyImport.update({
  path: '/workspaces/$workspaceId',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/workspaces_.$workspaceId.lazy').then((d) => d.Route),
)

const WorkspacesWorkspaceIdSettingsTabLazyRoute =
  WorkspacesWorkspaceIdSettingsTabLazyImport.update({
    path: '/workspaces/$workspaceId/settings/$tab',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/workspaces_.$workspaceId_.settings.$tab.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkspacesWorkspaceIdRunsTabLazyRoute =
  WorkspacesWorkspaceIdRunsTabLazyImport.update({
    path: '/workspaces/$workspaceId/runs/$tab',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/workspaces_.$workspaceId_.runs.$tab.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkspacesWorkspaceIdProjectsProjectIdLazyRoute =
  WorkspacesWorkspaceIdProjectsProjectIdLazyImport.update({
    path: '/workspaces/$workspaceId/projects/$projectId',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/workspaces_.$workspaceId_.projects.$projectId.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/workspaces/$workspaceId': {
      id: '/workspaces/$workspaceId'
      path: '/workspaces/$workspaceId'
      fullPath: '/workspaces/$workspaceId'
      preLoaderRoute: typeof WorkspacesWorkspaceIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/workspaces/$workspaceId/projects/$projectId': {
      id: '/workspaces/$workspaceId/projects/$projectId'
      path: '/workspaces/$workspaceId/projects/$projectId'
      fullPath: '/workspaces/$workspaceId/projects/$projectId'
      preLoaderRoute: typeof WorkspacesWorkspaceIdProjectsProjectIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/workspaces/$workspaceId/runs/$tab': {
      id: '/workspaces/$workspaceId/runs/$tab'
      path: '/workspaces/$workspaceId/runs/$tab'
      fullPath: '/workspaces/$workspaceId/runs/$tab'
      preLoaderRoute: typeof WorkspacesWorkspaceIdRunsTabLazyImport
      parentRoute: typeof rootRoute
    }
    '/workspaces/$workspaceId/settings/$tab': {
      id: '/workspaces/$workspaceId/settings/$tab'
      path: '/workspaces/$workspaceId/settings/$tab'
      fullPath: '/workspaces/$workspaceId/settings/$tab'
      preLoaderRoute: typeof WorkspacesWorkspaceIdSettingsTabLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/workspaces/$workspaceId': typeof WorkspacesWorkspaceIdLazyRoute
  '/workspaces/$workspaceId/projects/$projectId': typeof WorkspacesWorkspaceIdProjectsProjectIdLazyRoute
  '/workspaces/$workspaceId/runs/$tab': typeof WorkspacesWorkspaceIdRunsTabLazyRoute
  '/workspaces/$workspaceId/settings/$tab': typeof WorkspacesWorkspaceIdSettingsTabLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/workspaces/$workspaceId': typeof WorkspacesWorkspaceIdLazyRoute
  '/workspaces/$workspaceId/projects/$projectId': typeof WorkspacesWorkspaceIdProjectsProjectIdLazyRoute
  '/workspaces/$workspaceId/runs/$tab': typeof WorkspacesWorkspaceIdRunsTabLazyRoute
  '/workspaces/$workspaceId/settings/$tab': typeof WorkspacesWorkspaceIdSettingsTabLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/workspaces/$workspaceId': typeof WorkspacesWorkspaceIdLazyRoute
  '/workspaces/$workspaceId/projects/$projectId': typeof WorkspacesWorkspaceIdProjectsProjectIdLazyRoute
  '/workspaces/$workspaceId/runs/$tab': typeof WorkspacesWorkspaceIdRunsTabLazyRoute
  '/workspaces/$workspaceId/settings/$tab': typeof WorkspacesWorkspaceIdSettingsTabLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/workspaces/$workspaceId'
    | '/workspaces/$workspaceId/projects/$projectId'
    | '/workspaces/$workspaceId/runs/$tab'
    | '/workspaces/$workspaceId/settings/$tab'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/workspaces/$workspaceId'
    | '/workspaces/$workspaceId/projects/$projectId'
    | '/workspaces/$workspaceId/runs/$tab'
    | '/workspaces/$workspaceId/settings/$tab'
  id:
    | '__root__'
    | '/'
    | '/workspaces/$workspaceId'
    | '/workspaces/$workspaceId/projects/$projectId'
    | '/workspaces/$workspaceId/runs/$tab'
    | '/workspaces/$workspaceId/settings/$tab'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  WorkspacesWorkspaceIdLazyRoute: typeof WorkspacesWorkspaceIdLazyRoute
  WorkspacesWorkspaceIdProjectsProjectIdLazyRoute: typeof WorkspacesWorkspaceIdProjectsProjectIdLazyRoute
  WorkspacesWorkspaceIdRunsTabLazyRoute: typeof WorkspacesWorkspaceIdRunsTabLazyRoute
  WorkspacesWorkspaceIdSettingsTabLazyRoute: typeof WorkspacesWorkspaceIdSettingsTabLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  WorkspacesWorkspaceIdLazyRoute: WorkspacesWorkspaceIdLazyRoute,
  WorkspacesWorkspaceIdProjectsProjectIdLazyRoute:
    WorkspacesWorkspaceIdProjectsProjectIdLazyRoute,
  WorkspacesWorkspaceIdRunsTabLazyRoute: WorkspacesWorkspaceIdRunsTabLazyRoute,
  WorkspacesWorkspaceIdSettingsTabLazyRoute:
    WorkspacesWorkspaceIdSettingsTabLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/workspaces/$workspaceId",
        "/workspaces/$workspaceId/projects/$projectId",
        "/workspaces/$workspaceId/runs/$tab",
        "/workspaces/$workspaceId/settings/$tab"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/workspaces/$workspaceId": {
      "filePath": "workspaces_.$workspaceId.lazy.tsx"
    },
    "/workspaces/$workspaceId/projects/$projectId": {
      "filePath": "workspaces_.$workspaceId_.projects.$projectId.lazy.tsx"
    },
    "/workspaces/$workspaceId/runs/$tab": {
      "filePath": "workspaces_.$workspaceId_.runs.$tab.lazy.tsx"
    },
    "/workspaces/$workspaceId/settings/$tab": {
      "filePath": "workspaces_.$workspaceId_.settings.$tab.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
