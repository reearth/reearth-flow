fragment Deployment on Deployment {
  id
  projectId
  workspaceId
  workflowUrl
  version
  createdAt
  updatedAt
  project {
    name
  }
}

# NOTE: this is copy/pasted here from src/lib/gql/project/queries.graphql
fragment Project on Project {
  id
  name
  description
  createdAt
  updatedAt
  workspaceId
}

# NOTE: this is copy/pasted here from src/lib/gql/job/queries.graphql
fragment Job on Job {
  id
  deploymentId
  workspaceId
  status
  startedAt
  completedAt
  # deployment{
  #   ...Deployment
  # }
  # workspace{
  #   ...Workspace
  # }
}

mutation CreateDeployment($input: CreateDeploymentInput!) {
  createDeployment(input: $input) {
    deployment {
      ...Deployment
    }
  }
}

mutation UpdateDeployment($input: UpdateDeploymentInput!) {
  updateDeployment(input: $input) {
    deployment {
      ...Deployment
    }
  }
}

mutation DeleteDeployment($input: DeleteDeploymentInput!) {
  deleteDeployment(input: $input) {
    deploymentId
  }
}

mutation ExecuteDeployment($input: ExecuteDeploymentInput!) {
  executeDeployment(input: $input) {
    job {
      ...Job
    }
  }
}

query GetDeployments($workspaceId: ID!, $pagination: Pagination) {
  deployments(workspaceId: $workspaceId, pagination: $pagination) {
    totalCount
    nodes {
      ...Deployment
    }
    pageInfo {
      endCursor
      hasNextPage
    }
  }
}

query GetJobs($workspaceId: ID!, $pagination: Pagination) {
  jobs(workspaceId: $workspaceId, pagination: $pagination) {
    totalCount
    nodes {
      ...Job
    }
    pageInfo {
      endCursor
      hasNextPage
    }
  }
}

query GetJob($id: ID!) {
  job(id: $id) {
    ...Job
  }
}
