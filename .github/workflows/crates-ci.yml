name: Crates CI

on:
  push:
    branches:
      - main
    paths:
      - "worker/crates/**"
      - "worker/Cargo.toml"
      - "worker/Cargo.lock"
      - ".github/workflows/crates-ci.yml"
  pull_request:
    paths:
      - "worker/crates/**"
      - "worker/Cargo.toml"
      - "worker/Cargo.lock"
      - "worker/.github/workflows/crates-ci.yml"
env:
  # Disable incremental compilation.
  CARGO_INCREMENTAL: 0
  # Allow more retries for network requests in cargo (downloading crates) and
  # rustup (installing toolchains). This should help to reduce flaky CI failures
  # from transient network timeouts or other issues.
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  # Don't emit giant backtraces in the CI logs.
  RUST_BACKTRACE: short

defaults:
  run:
    working-directory: ./worker

jobs:
  check:
    # Run `cargo check` first to ensure that the pushed code at least compiles.
    name: cargo check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Check
        run: cargo check --all

  style:
    # Check style.
    name: cargo fmt
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: rustfmt
        run: cargo fmt --all -- --check

  warnings:
    # Check for any warnings. This is informational and thus is allowed to fail.
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: rustfmt
        run: cargo clippy --all -- -D warnings

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Run tests
        run: cargo test --all
