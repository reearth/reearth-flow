name: update-policies
on:
  workflow_call:
env:
  GO_VERSION: '1.22'
  GCS_BUCKET_PATH: gs://cerbos-policy-reearth-oss/policies

jobs:
  update-policies:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: set up
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false
      - name: Generate policies
        run: |
          set -e
          if ! make gen-policies; then
            echo "Policy generation failed"
            exit 1
          fi
        working-directory: server/api
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
      - name: Sync policies with Cloud Storage
        run: |
          set -euo pipefail
          echo "All files in bucket (before sync):"
          gsutil ls "${GCS_BUCKET_PATH}/" || true

          echo "Current flow files in bucket:"
          bucket_files=$(gsutil ls "${GCS_BUCKET_PATH}/flow_*.yaml" || true)
          echo "$bucket_files"

          echo "Local policy files:"
          local_files=$(ls policies/flow_*.yaml 2>/dev/null || true)
          echo "$local_files"

          for file in policies/flow_*.yaml; do
            if [ -f "$file" ]; then
              if ! yamllint "$file"; then
                echo "Error: Invalid YAML in $file"
                exit 1
              fi
            fi
          done

          for file in policies/flow_*.yaml; do
            if [ -f "$file" ]; then
              file_name=$(basename "$file")
              echo "Uploading/Updating: $file_name"
              if ! gsutil cp "$file" "${GCS_BUCKET_PATH}/$file_name"; then
                echo "Error: Failed to upload $file_name"
                exit 1
              fi
            fi
          done

          for bucket_file in "${GCS_BUCKET_PATH}"/flow_*.yaml; do
            file_name=$(basename "$bucket_file")
            if [ ! -f "policies/$file_name" ] && [[ "$file_name" == flow_* ]]; then
              echo "Deleting: $file_name"
              if ! gsutil rm "$bucket_file"; then
                echo "Error: Failed to delete $bucket_file"
                exit 1
              fi
            fi
          done

          echo "Sync completed. All files in bucket:"
          gsutil ls "${GCS_BUCKET_PATH}/" || true
        working-directory: server/api
