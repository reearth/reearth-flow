name: Release Quality Checker

on:
  workflow_dispatch:

env:
  VCPKG_ROOT: 'C:\vcpkg'
  VCPKGRS_DYNAMIC: '1'
  RUSTFLAGS: '-C target-feature=+crt-static'

jobs:
  create-release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}

    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: get version
        working-directory: ./engine/plateau-gis-quality-checker
        run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: create release
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `plateau-gis-quality-checker-v${process.env.PACKAGE_VERSION}`,
              name: `PLATEAU GIS Quality Checker v${process.env.PACKAGE_VERSION}`,
              body: 'Take a look at the assets to download and install this app.',
              draft: true,
              prerelease: true
            })
            return data.id

  build-tauri:
    needs: create-release
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        settings:
          - platform: windows-latest
            args: '-- --profile release-lto'

    runs-on: ${{ matrix.settings.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: install dependencies (macos only)
        if: matrix.settings.platform == 'macos-latest'
        run: |
          brew install libxml2 pkg-config
          LIBXML2_PATH=$(realpath $(brew --prefix libxml2))
          sudo mkdir -p /usr/local/lib/
          sudo ln -s ${LIBXML2_PATH}/lib/libxml2.2.dylib /usr/local/lib/libxml-2.0.dylib
          echo "LIBXML2=${LIBXML2_PATH}/lib/pkgconfig/libxml-2.0.pc" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=${LIBXML2_PATH}/lib/pkgconfig" >> $GITHUB_ENV

      - name: install dependencies (ubuntu only)
        if: matrix.settings.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: vcpkg integrate
        if: matrix.settings.platform == 'windows-latest'
        working-directory: ./engine
        run: |
          vcpkg install libxml2 --triplet x64-windows-static
          vcpkg integrate install

      - name: enable corepack
        run: |
          corepack enable
        working-directory: ./engine/plateau-gis-quality-checker

      - name: install frontend dependencies
        run: yarn install
        working-directory: ./engine/plateau-gis-quality-checker

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: ./engine/plateau-gis-quality-checker
          releaseId: ${{ needs.create-release.outputs.release_id }}
          args: ${{ matrix.settings.args }}

  publish-release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: [create-release, build-tauri]

    steps:
      - name: publish release
        id: publish-release
        uses: actions/github-script@v6
        env:
          release_id: ${{ needs.create-release.outputs.release_id }}
        with:
          script: |
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              draft: false,
              prerelease: false
            })
