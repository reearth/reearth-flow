name: ci-api
on:
  workflow_call:
env:
  GO_VERSION: "1.22"
  RUST_VERSION: "1.85"

jobs:
  ci-api-lint:
    runs-on: ubuntu-latest
    if: github.event_name != 'push' || !startsWith(github.event.head_commit.message, 'v')
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: set up
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.59.1
          args: --timeout=10m
          working-directory: server/api

  ci-api-test:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:6-focal
        ports:
          - 27017:27017
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "server/websocket -> target"
      - name: Install Protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
      - name: Install Thrift Compiler
        run: |
          sudo apt-get install -y thrift-compiler
      - name: Build WebSocket Library
        run: |
          cd ${{ github.workspace }}/server/websocket
          pwd
          echo "Building websocket library..."
          cargo build --release --target-dir ../target --verbose
          echo "Build completed, checking target directory..."
          ls -la ../target
          echo "Checking release directory..."
          ls -la ../target/release/
      - name: set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache-dependency-path: server/api/go.sum
      - name: test
        run: |
          ls -la ${{ github.workspace }}/server/target/release/
          export LD_LIBRARY_PATH=${{ github.workspace }}/server/target/release:$LD_LIBRARY_PATH
          go test ./... -v -race -coverprofile=coverage.txt -covermode=atomic -timeout 10m
        env:
          REEARTH_FLOW_DB: mongodb://localhost
          LD_LIBRARY_PATH: ${{ github.workspace }}/server/target/release
        working-directory: server/api
      - name: Send coverage report
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: api
