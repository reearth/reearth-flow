name: build-api
on:
  workflow_dispatch:
    inputs:
      sha_short:
        description: 'sha_short'
        required: true
      new_tag:
        description: 'new_tag'
        required: true
      new_tag_short:
        description: 'new_tag_short'
        required: true
      name:
        description: 'name'
        required: true
      sha:
        description: "sha"
        required: true
  repository_dispatch:
      types: [build-api]
jobs:
  build-api:
    name: Build and release api
    runs-on: ubuntu-latest
    if: github.event.inputs.name || github.event.inputs.new_tag
    env:
      ARTIFACTS: api/dist/reearth_*.*
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist ${{ github.event.inputs.new_tag == 'blank' && '--snapshot' || '' }}
          workdir: api
        env:
          GORELEASER_CURRENT_TAG: ${{ github.event.inputs.new_tag == 'blank' && '0.0.0' || github.event.inputs.new_tag }}
      - name: Rename artifacts
        if: ${{ github.event.inputs.name != 'blank' }}
        run: for f in $ARTIFACTS; do mv $f $(echo $f | sed -E 's/_0\.0\.0-SNAPSHOT-[^_]*/_${{ github.event.inputs.name }}/'); done
      - name: List artifacts
        run: ls -l api/dist
      - name: Release nightly/rc
        if: ${{ github.event.inputs.name != 'blank' }}
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: ${{ env.ARTIFACTS }}
          commit: ${{ github.event.inputs.sha }}
          name: ${{ github.event.inputs.name }}
          tag: ${{ github.event.inputs.name }}
          body: ${{ github.event.inputs.sha_short }}
          prerelease: true
      - name: Create GitHub release
        if: ${{ github.event.inputs.new_tag != 'blank' }}
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: ${{ env.ARTIFACTS }}
          commit: ${{ github.event.inputs.sha }}
          name: ${{ github.event.inputs.new_tag }}
          tag: ${{ github.event.inputs.new_tag}}
          bodyFile: CHANGELOG_latest.md

  build-docker-image:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.name != 'blank' || github.event.inputs.new_tag != 'blank' }}
    env:
      IMAGE_NAME: reearth/reearth-flow
    defaults:
      run:
        working-directory: api
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Get options
        id: options
        env:
          TAG: ${{ github.event.inputs.new_tag_short && github.event.inputs.new_tag_short != 'blank' && github.event.inputs.new_tag_short || '' }}
          NAME: ${{ github.event.inputs.name }}
          SHA: ${{ github.event.inputs.sha_short }}
        run: |
          if [[ -n $TAG ]]; then
            PLATFORMS=linux/amd64,linux/arm64
            VERSION=$TAG
            TAGS=$IMAGE_NAME:$TAG
            if [[ ! $TAG =~ '-' ]]; then
              TAGS+=,${IMAGE_NAME}:${TAG%.*}
              TAGS+=,${IMAGE_NAME}:${TAG%%.*}
              TAGS+=,${IMAGE_NAME}:latest
            fi
          else
            PLATFORMS=linux/amd64
            VERSION=$SHA
            TAGS=$IMAGE_NAME:$NAME
          fi
          echo "::set-output name=platforms::$PLATFORMS"
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=tags::$TAGS"
      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: api
          platforms: ${{ steps.options.outputs.platforms }}
          push: true
          build-args: VERSION=${{ steps.options.outputs.version }}
          tags: ${{ steps.options.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Invoke ci-deploy-api-nightly workflow
        uses: benc-uk/workflow-dispatch@v1
        if: github.event.inputs.name == 'nightly'
        with:
          workflow: deploy-api-nightly
          token: ${{ steps.app-token.outputs.token }}