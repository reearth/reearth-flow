name: Docker Push Worker

on:
  workflow_call:
    inputs:
      sha_short:
        required: true
        type: string
      new_tag:
        required: true
        type: string
      new_tag_short:
        required: true
        type: string
      name:
        required: true
        type: string
      sha:
        required: true
        type: string

jobs:
  deploy-worker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    if: ${{ inputs.name != 'blank' || inputs.new_tag != 'blank' }}
    env:
      IMAGE_NAME: reearth/reearth-flow-worker
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Determine Build Options
        id: options
        run: |
          TAG="${{ inputs.new_tag_short != 'blank' && inputs.new_tag_short || '' }}"
          NAME="${{ inputs.name }}"
          SHA="${{ inputs.sha_short }}"

          if [[ -n "$TAG" ]]; then
            PLATFORMS="linux/amd64,linux/arm64"
            VERSION="$TAG"
            TAGS="$IMAGE_NAME:$TAG"

            if [[ ! "$TAG" =~ '-' ]]; then
              TAGS+=",${IMAGE_NAME}:${TAG%.*}"
              TAGS+=",${IMAGE_NAME}:${TAG%%.*}"
              TAGS+=",${IMAGE_NAME}:latest"
            fi
          else
            PLATFORMS="linux/amd64"
            VERSION="$SHA"
            TAGS="$IMAGE_NAME:$NAME"
          fi

          echo "platforms=$PLATFORMS" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: engine
          file: engine/containers/worker/Dockerfile
          platforms: ${{ steps.options.outputs.platforms }}
          push: true
          build-args: VERSION=${{ steps.options.outputs.version }}
          tags: ${{ steps.options.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: true
          sbom: true
